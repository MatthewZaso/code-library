{"version":3,"file":"odo-tabs.min.js","sources":["../src/tabs-event.js","../src/tabs.js"],"sourcesContent":["class TabsEvent {\n  /**\n   * Object representing a tab event.\n   * @param {string} type Event type.\n   * @param {number} index Index of tab.\n   * @constructor\n   */\n  constructor(type, index) {\n    this.type = type;\n\n    /** @type {number} */\n    this.index = index;\n\n    /** @type {boolean} Whether `preventDefault` has been called. */\n    this.defaultPrevented = false;\n  }\n\n  preventDefault() {\n    this.defaultPrevented = true;\n  }\n}\n\nexport default TabsEvent;\n","/**\n * @fileoverview Easy tabs. Inspired by bootstrap and jQuery UI.\n *\n * {@link http://jqueryui.com/tabs/}\n * {@link https://github.com/jquery/jquery-ui/blob/master/ui/tabs.js}\n * {@link http://www.marcozehe.de/2013/02/02/advanced-aria-tip-1-tabs-in-web-apps/}\n * {@link http://git.aaronlumsden.com/tabulous.js/}\n *\n * @author Glen Cheney <glen@odopod.com>\n */\n\nimport TinyEmitter from 'tiny-emitter';\nimport { browser, dom, math } from '@odopod/odo-helpers';\nimport OdoWindowEvents from '@odopod/odo-window-events';\nimport TabsEvent from './tabs-event';\n\nlet id = 0;\nfunction uniqueId() {\n  id += 1;\n  return `odo-tabs${id}`;\n}\n\nclass Tabs extends TinyEmitter {\n  /**\n   * A tabs component.\n   * @param {Element} element The tabs list element.\n   * @constructor\n   */\n  constructor(element) {\n    super();\n\n    /** @type {Element} */\n    this.element = element;\n\n    /** @private {number} */\n    this._selectedIndex = -1;\n\n    /**\n     * List items, children of the tabs list.\n     * @type {Array.<Element>}\n     */\n    this.tabs = Array.from(this.element.children);\n\n    /**\n     * Anchor elements inside the tab.\n     * @type {Array.<HTMLAnchorElement>}\n     */\n    this.anchors = this.tabs.map(tab => tab.querySelector('a'));\n\n    /**\n     * Tab pane elements.\n     * @type {Array.<Element>}\n     */\n    this.panes = this.anchors.map(anchor => document.getElementById(anchor.getAttribute('href').substring(1)));\n\n    /**\n     * Wrapper for the panes.\n     * @type {Element}\n     */\n    this.panesContainer = this.panes[0].parentNode;\n\n    /**\n     * Get an array of [possible] hashes.\n     * @type {Array.<?string>}\n     */\n    this.hashes = this.anchors.map(anchor => anchor.getAttribute('data-hash'));\n\n    this.init();\n  }\n\n  init() {\n    const startIndex = this.getStartingIndex();\n\n    // Bind events.\n    this._setupHandlers();\n\n    // Add aria roles.\n    this._processTabs();\n\n    // Show the first or the one in the #hash.\n    this.setSelectedIndex(startIndex, true);\n  }\n\n  /**\n   * Determine the starting tab index. It will first look at the URL's #hash, then\n   * for a pane which has the IS_SELECTED class, defaulting to the first tab if\n   * neither of those exist.\n   * @return {number}\n   */\n  getStartingIndex() {\n    const hashIndex = this._getWindowHashIndex();\n\n    if (hashIndex > -1) {\n      return hashIndex;\n    }\n\n    const startIndex = this.panes.findIndex(pane => pane.matches('.' + Tabs.ClassName.IS_SELECTED));\n\n    if (startIndex > -1) {\n      return startIndex;\n    }\n\n    return 0;\n  }\n\n  /**\n   * Set tabIndex attribute, add any aria roles and classes.\n   * @protected\n   */\n  _processTabs() {\n    this.element.classList.add(Tabs.ClassName.TABS);\n    this.element.setAttribute('role', 'tablist');\n\n    // Tab wrappers.\n    this.tabs.forEach((tab) => {\n      tab.setAttribute('role', 'presentation');\n    });\n\n    // Tab (anchor) elements.\n    this.anchors.forEach((anchor, i) => {\n      anchor.setAttribute('role', 'tab');\n      anchor.setAttribute('tabIndex', -1);\n      anchor.setAttribute('aria-selected', false);\n\n      dom.giveId(anchor, uniqueId);\n\n      const pane = this.panes[i];\n      anchor.setAttribute('aria-controls', pane.id);\n      pane.setAttribute('aria-labelledby', anchor.id);\n    });\n\n    // Panes.\n    this.panes.forEach((pane) => {\n      pane.setAttribute('role', 'tabpanel');\n      pane.setAttribute('aria-hidden', true);\n    });\n  }\n\n  /**\n   * Bind event listeners.\n   * @protected\n   */\n  _setupHandlers() {\n    this._onClick = this._handleClick.bind(this);\n    this._onKeydown = this._handleKeydown.bind(this);\n    this._onHashChange = this._handleHashChange.bind(this);\n\n    this.element.addEventListener('click', this._onClick);\n    this.element.addEventListener('keydown', this._onKeydown);\n    window.addEventListener('hashchange', this._onHashChange);\n    this._resizeId = OdoWindowEvents.onResize(this.update.bind(this));\n  }\n\n  /**\n   * Delegated click listener. Look for a tab close to the target and select it\n   * if it exists.\n   * @param {MouseEvent} evt Event object.\n   * @private\n   */\n  _handleClick(evt) {\n    evt.preventDefault();\n\n    const tab = evt.target.closest('.' + Tabs.ClassName.TAB);\n    if (tab) {\n      this.setSelectedIndex(this.tabs.indexOf(tab));\n    }\n  }\n\n  /**\n   * Key pressed on the tab list. Change focus or select the tab.\n   * @param {KeyboardEvent} evt Event object.\n   * @private\n   */\n  _handleKeydown(evt) {\n    let focusedIndex = this._getFocusedTabIndex();\n\n    switch (evt.which) {\n      // Right | Down\n      case 39:\n      case 40:\n        focusedIndex += 1;\n        break;\n\n      // Left | Up\n      case 37:\n      case 38:\n        focusedIndex -= 1;\n        break;\n\n      // Spacebar | Enter\n      case 32:\n      case 13:\n        evt.preventDefault();\n        this.setSelectedIndex(focusedIndex);\n        return;\n      default:\n        return;\n    }\n\n    evt.preventDefault();\n    this._focusTab(math.clamp(focusedIndex, 0, this.tabs.length - 1));\n  }\n\n  /**\n   * URL hash changed, see if the hash matches one of the hashes stored and if it\n   * does, navigate to that pane.\n   * @private\n   */\n  _handleHashChange() {\n    const hashIndex = this._getWindowHashIndex();\n    if (hashIndex > -1) {\n      this.setSelectedIndex(hashIndex);\n    }\n  }\n\n  /**\n   * Reset the height of the pane parent.\n   * @private\n   */\n  update() {\n    const currentPane = this.panes[this.getSelectedIndex()];\n    const newHeight = currentPane.offsetHeight;\n    this.panesContainer.style.height = newHeight + 'px';\n  }\n\n  /**\n   * Retrieve the hash without the `#` from the url.\n   * @return {string}\n   * @private\n   */\n  _getWindowHashIndex() {\n    return this.hashes.indexOf(window.location.hash.substring(1));\n  }\n\n  /**\n   * Find the index of the currently focused tab.\n   * @return {number}\n   * @private\n   */\n  _getFocusedTabIndex() {\n    const focusedTab = document.activeElement.closest('.' + Tabs.ClassName.TAB);\n    return this.tabs.indexOf(focusedTab);\n  }\n\n  /**\n   * Focus on a tab.\n   * @param {number} index Tab index to focus on.\n   * @private\n   */\n  _focusTab(index) {\n    this.anchors[index].focus();\n  }\n\n  /**\n   * Returns the currently selected index.\n   * @return {number}\n   */\n  getSelectedIndex() {\n    return this._selectedIndex;\n  }\n\n  /**\n   * Set the selected index to a new value. Will exit early if the index is out of\n   * range, or the index is the same as the current one.\n   * @param {number} index Index to go to.\n   * @param {boolean} [skipHash] Whether to skip setting the hash.\n   */\n  setSelectedIndex(index, skipHash) {\n    if (index === this._selectedIndex || index < 0 || index >= this.tabs.length) {\n      return;\n    }\n\n    // Trigger the will show event and give listeners a chance to cancel showing\n    // the tab/pane.\n    const willShowEvent = new TabsEvent(Tabs.EventType.WILL_SHOW, index);\n    this.emit(willShowEvent.type, willShowEvent);\n\n    if (willShowEvent.defaultPrevented) {\n      return;\n    }\n\n    this._selectTab(index);\n    this._selectPane(index);\n\n    this._selectedIndex = index;\n\n    if (!skipHash && this.hashes[index]) {\n      browser.setHash(this.hashes[index]);\n    }\n\n    const didShowEvent = new TabsEvent(Tabs.EventType.DID_SHOW, index);\n    this.emit(didShowEvent.type, didShowEvent);\n  }\n\n  /**\n   * Update the selected tab.\n   * @param {number} index Index of the new tab.\n   * @private\n   */\n  _selectTab(index) {\n    const newTab = this.tabs[index];\n    const oldTab = this.tabs[this.getSelectedIndex()];\n    const newAnchor = this.anchors[index];\n    const oldAnchor = this.anchors[this.getSelectedIndex()];\n\n    if (oldTab) {\n      oldTab.classList.remove(Tabs.ClassName.IS_SELECTED);\n      oldAnchor.classList.remove(Tabs.ClassName.IS_SELECTED);\n      oldAnchor.setAttribute('tabIndex', -1);\n      oldAnchor.setAttribute('aria-selected', false);\n    }\n\n    newTab.classList.add(Tabs.ClassName.IS_SELECTED);\n    newAnchor.classList.add(Tabs.ClassName.IS_SELECTED);\n    newAnchor.setAttribute('tabIndex', 0);\n    newAnchor.setAttribute('aria-selected', true);\n  }\n\n  /**\n   * Update the selected pane. Handles aria states.\n   * @param {number} index Index of the new pane.\n   * @private\n   */\n  _selectPane(index) {\n    const newPane = this.panes[index];\n    const oldPane = this.panes[this.getSelectedIndex()];\n    const newHeight = newPane.offsetHeight;\n\n    if (oldPane) {\n      oldPane.classList.remove(Tabs.ClassName.IS_SELECTED);\n      oldPane.setAttribute('aria-hidden', true);\n    }\n\n    newPane.classList.add(Tabs.ClassName.IS_SELECTED);\n    newPane.setAttribute('aria-hidden', false);\n\n    this.panesContainer.style.height = newHeight + 'px';\n  }\n\n  /**\n   * Remove event listeners, classes, attributes, and other things added by this script.\n   */\n  dispose() {\n    this.element.classList.remove(Tabs.ClassName.TABS);\n    this.element.removeAttribute('role');\n\n    for (let i = this.tabs.length - 1; i >= 0; i--) {\n      const tab = this.tabs[i];\n      const anchor = this.anchors[i];\n      const pane = this.panes[i];\n\n      tab.classList.remove(Tabs.ClassName.IS_SELECTED);\n      anchor.classList.remove(Tabs.ClassName.IS_SELECTED);\n      pane.classList.remove(Tabs.ClassName.IS_SELECTED);\n      tab.removeAttribute('role');\n      anchor.removeAttribute('role');\n      anchor.removeAttribute('tabIndex');\n      anchor.removeAttribute('aria-selected');\n      anchor.removeAttribute('aria-controls');\n      pane.removeAttribute('role');\n      pane.removeAttribute('aria-labelledby');\n      pane.removeAttribute('aria-hidden');\n    }\n\n    this.panesContainer.style.height = '';\n\n    this.element.removeEventListener('click', this._onClick);\n    this.element.removeEventListener('keydown', this._onKeydown);\n    window.removeEventListener('hashchange', this._onHashChange);\n    OdoWindowEvents.remove(this._resizeId);\n\n    this.element = null;\n    this.anchors = null;\n    this.panes = null;\n    this.panesContainer = null;\n    this._selectedIndex = -1;\n  }\n}\n\nTabs.ClassName = {\n  TABS: 'odo-tabs',\n  TAB: 'odo-tabs__tab',\n  IS_SELECTED: 'is-selected',\n};\n\nTabs.EventType = {\n  WILL_SHOW: 'odotabs:willshow',\n  DID_SHOW: 'odotabs:didshow',\n};\n\nexport default Tabs;\n"],"names":["TabsEvent","type","index","defaultPrevented","preventDefault","id","uniqueId","Tabs","element","_TinyEmitter","_selectedIndex","tabs","Array","from","_this","children","anchors","map","tab","querySelector","panes","document","getElementById","anchor","getAttribute","substring","panesContainer","parentNode","hashes","init","startIndex","this","getStartingIndex","_setupHandlers","_processTabs","setSelectedIndex","hashIndex","_getWindowHashIndex","findIndex","pane","matches","ClassName","IS_SELECTED","classList","add","TABS","setAttribute","forEach","i","giveId","_this2","_onClick","_handleClick","bind","_onKeydown","_handleKeydown","_onHashChange","_handleHashChange","addEventListener","_resizeId","OdoWindowEvents","onResize","update","evt","target","closest","TAB","indexOf","focusedIndex","_getFocusedTabIndex","which","_focusTab","math","clamp","length","newHeight","getSelectedIndex","offsetHeight","style","height","window","location","hash","focusedTab","activeElement","focus","skipHash","willShowEvent","EventType","WILL_SHOW","emit","_selectTab","_selectPane","setHash","didShowEvent","DID_SHOW","newTab","oldTab","newAnchor","oldAnchor","remove","newPane","oldPane","dispose","removeAttribute","removeEventListener","TinyEmitter"],"mappings":"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"}