{"version":3,"file":"odo-dialog.min.js","sources":["../src/scroll-fix.js","../src/dialog.js"],"sourcesContent":["/**\n * @fileoverview Makes an overflowing element scrollable and handles preventing\n * default events and stopping event propagation when the scrollable element is\n * at the top or bottom of the scrollable area.\n *\n * @author Glen Cheney\n */\n\nimport { randomString } from '@odopod/odo-helpers';\nimport OdoDevice from '@odopod/odo-device';\n\n/**\n * Makes the element scrollable with some smart listeners because iOS\n * behaves unsatisfactory.\n * @param {Element} element Element to use.\n * @param {string} id Unique id.\n * @constructor\n */\nclass ScrollFix {\n  constructor(element, id) {\n    this.element = element;\n    this.id = id;\n    this.startY = null;\n    this.scrollY = null;\n    this._createBoundEvents();\n    this._registerEvents();\n  }\n\n  _createBoundEvents() {\n    this._touchStartBound = this._onTouchStart.bind(this);\n    this._touchMoveBound = this._onTouchMove.bind(this);\n    this._preventDefaultBound = this._preventDefault.bind(this);\n  }\n\n  /**\n   * Add event listeners.\n   * @private\n   */\n  _registerEvents() {\n    document.body.addEventListener('touchstart', this._touchStartBound);\n    document.body.addEventListener('touchmove', this._touchMoveBound);\n    document.addEventListener('touchmove', this._preventDefaultBound);\n  }\n\n  /**\n   * Save positions when the touch starts.\n   * @param {TouchEvent} evt Event object.\n   * @private\n   */\n  _onTouchStart(evt) {\n    this.startY = evt.changedTouches[0].pageY;\n    this.scrollY = this.element.scrollTop;\n  }\n\n  /**\n   * When the touch move and touch start events get to the scrollable element,\n   * prevent them from bubbling further.\n   * @param {TouchEvent} evt Event object.\n   * @private\n   */\n  _onTouchMove(evt) {\n    const deltaY = this.startY - evt.changedTouches[0].pageY;\n    const scrollTop = this.scrollY + deltaY;\n\n    // Prevent default stops all further touches...\n    // the user must lift their finger and swipe again before drags in the\n    // opposite direction register.\n    // However, without this, the same thing occurs, but instead of no\n    // scrolling, the page behind the dialog scrolls.\n    if (scrollTop < 0 || scrollTop + this.element.offsetHeight >\n        this.element.scrollHeight) {\n      evt.preventDefault();\n    } else {\n      evt.stopPropagation();\n    }\n  }\n\n  /**\n   * Simply prevent the event's default action.\n   * @param {TouchEvent} evt Event object.\n   * @private\n   */\n  _preventDefault(evt) {\n    evt.preventDefault();\n  }\n\n  /**\n   * Dispose of this instance by removing handlers and DOM references.\n   */\n  dispose() {\n    document.body.removeEventListener('touchstart', this._touchStartBound);\n    document.body.removeEventListener('touchmove', this._touchMoveBound);\n    document.removeEventListener('touchmove', this._preventDefaultBound);\n\n    this.element = null;\n    this.id = null;\n  }\n}\n\nexport default {\n  /**\n   * Dictionary of ScrollFix instances.\n   * @type {Object.<string, ScrollFix>}\n   * @private\n   */\n  _fixes: new Map(),\n\n  /**\n   * Enable an element to be scrollable.\n   * @param {Element} element Element to make scrollable.\n   * @return {string} Id which is used to remove it.\n   */\n  add(element) {\n    if (OdoDevice.HAS_TOUCH_EVENTS) {\n      const id = randomString();\n      this._fixes.set(id, new ScrollFix(element, id));\n      return id;\n    }\n\n    return '';\n  },\n\n  /**\n   * Disable scrolling on an element and remove event listeners. Be aware\n   * that this removes the scroll fix class. If your element doesn't have\n   * the overflow-scrolling: touch property on it, iOS may flicker the whole\n   * container when calling this method.\n   * @param {string} id Id returned from enable.\n   */\n  remove(id) {\n    if (this._fixes.has(id)) {\n      this._fixes.get(id).dispose();\n      this._fixes.delete(id);\n    }\n  },\n};\n","/**\n * @fileoverview UI Component for universal dialogs.\n * Notes\n * * The transition is on the main `element` so that `scale()` transforms do not\n * cause the calculation of `scrollHeight` to be artificially increased.\n * * The backdrop is a sibling to the dialog so that it does not cover the\n * scrollbar of the dialog and so that it doesn't jitter in iOS.\n *\n * @author Glen Cheney <glen@odopod.com>\n */\n\nimport TinyEmitter from 'tiny-emitter';\nimport { pull, onTransitionEnd } from '@odopod/odo-helpers';\nimport ScrollFix from './scroll-fix';\n\nconst FOCUSABLE_ELEMENTS = [\n  'a[href]',\n  'area[href]',\n  'input:not([disabled])',\n  'select:not([disabled])',\n  'textarea:not([disabled])',\n  'button:not([disabled])',\n  'iframe',\n  'object',\n  'embed',\n  '[contenteditable]',\n  '[tabindex]:not([tabindex^=\"-\"])',\n].join(',');\n\nclass Dialog extends TinyEmitter {\n  /**\n   * Dialog that can contain static images, carousels, or videos\n   * @param {Element} element Main element.\n   * @param {object} [opts] Instance options.\n   * @constructor\n   */\n  constructor(element, opts) {\n    super();\n\n    if (!(element instanceof Element)) {\n      throw new TypeError(`OdoDialog requires an element. Got: \"${element}\"`);\n    }\n\n    /**\n     * Base Element.\n     * @type {Element}\n     */\n    this.element = element;\n\n    /**\n     * Options object.\n     * @type {object}\n     */\n    this.options = Object.assign({}, Dialog.Defaults, opts);\n\n    /**\n     * Dialog Id.\n     * @type {string}\n     */\n    this.id = element.getAttribute('id');\n\n    /**\n     * Dialog backdrop\n     * @type {Element}\n     * @protected\n     */\n    this.backdrop = document.createElement('div');\n    this.backdrop.className = Dialog.Classes.BACKDROP;\n\n    /**\n     * Dialog content (role=document).\n     * @type {Element}\n     * @protected\n     */\n    this.content = this.getByClass(Dialog.Classes.CONTENT);\n\n    /**\n     * Elements which, when clicked, close the dialog.\n     * @type {Element}\n     * @private\n     */\n    this._closers = Array.from(this.element.querySelectorAll('[data-odo-dialog-close]'));\n\n    /**\n     * Window resize Id\n     * @type {string}\n     * @private\n     */\n    this._resizeId = null;\n\n    /**\n     * ScrollFix id\n     * @type {?string}\n     * @private\n     */\n    this._scrollFixId = null;\n\n    /**\n     * Whether the dialog is open.\n     * @type {boolean}\n     */\n    this.isOpen = false;\n\n    /**\n     * Is the dialog currently animating.\n     * @type {boolean}\n     * @protected\n     */\n    this.isAnimating = false;\n\n    /**\n     * Whether the body has a scrollbar.\n     * @type {?boolean}\n     * @private\n     */\n    this._hasBodyScrollbar = null;\n\n    /**\n     * Padding on the body.\n     * @type {number}\n     * @private\n     */\n    this._originalBodyPadding = -1;\n\n    /**\n     * Whether this is a fullscreen dialog. Fullscreen dialogs should not have\n     * paddingRight applied to them.\n     * @type {?boolean}\n     * @private\n     */\n    this._isFullscreen = null;\n\n    this.z = Dialog.Z_BASE;\n\n    Dialog.Instances.push(this);\n\n    if (Dialog.Instances.length === 1) {\n      document.body.addEventListener('click', Dialog._handleTriggerClick);\n    }\n\n    // If this browser does not support auto margins for flexbox, add a class\n    // so that it can be centered differently.\n    this.element.classList.toggle(Dialog.Classes.NO_AUTO_MARGIN, !Dialog.SUPPORTS_AUTO_MARGINS);\n\n    this._bindContexts();\n    this.onResize();\n    this._addA11yAttributes();\n    this._ensureBodyChild();\n  }\n\n  /**\n   * Find descendent element by class.\n   * @param {string} name Name of the class to find.\n   * @return {?Element} The element or undefined.\n   */\n  getByClass(name) {\n    return this.element.getElementsByClassName(name)[0];\n  }\n\n  /**\n   * Bind `this` context to event handlers.\n   */\n  _bindContexts() {\n    this.onKeyPress = this.onKeyPress.bind(this);\n    this.onClick = this.onClick.bind(this);\n    this.close = this.close.bind(this);\n    // Bind undefined as the first parameter so that the event object will be\n    // the second parameter and the optional viewportHeight parameter will work.\n    this.onWindowResize = this.onResize.bind(this, undefined);\n  }\n\n  /**\n   * Add static accessibility attributes so that the implementor can leave them\n   * off or in case they forget.\n   */\n  _addA11yAttributes() {\n    this.element.tabIndex = -1;\n    this.element.setAttribute('aria-hidden', true);\n    this.element.setAttribute('role', 'dialog');\n    this.content.setAttribute('role', 'document');\n  }\n\n  /**\n   * If the dialog element is not a direct descendent of the <body>, make it so.\n   */\n  _ensureBodyChild() {\n    if (this.element.parentNode !== document.body) {\n      document.body.appendChild(this.element);\n    }\n  }\n\n  /**\n   * Determine the correct element to scroll fix and fix it.\n   */\n  _applyScrollFix() {\n    // Allow the scrollable element to be something inside the dialog.\n    if (this.options.scrollableElement) {\n      const element = this.element.matches(this.options.scrollableElement) ?\n        this.element :\n        this.element.querySelector(this.options.scrollableElement);\n      this._scrollFixId = ScrollFix.add(element);\n    }\n  }\n\n  /**\n   * If the page already has a scrollbar, adding overflow: hidden will remove it,\n   * shifting the content to the right. To avoid this, there needs to be padding\n   * on the body that's the same width as the scrollbar, but only when the dialog\n   * will not have a scrollbar to take the page scrollbar's place.\n   * @return {number}\n   */\n  _getScrollbarOffset() {\n    const hasDialogScrollbar = this.element.scrollHeight > document.documentElement.clientHeight;\n    return this._hasBodyScrollbar && !hasDialogScrollbar ? Dialog.SCROLLBAR_WIDTH : 0;\n  }\n\n  /**\n   * Click handler on the main element. When the dialog is dismissable and the\n   * user clicked outside the content (i.e. the backdrop), close it.\n   * @param {Event} evt Event object.\n   * @protected\n   */\n  onClick(evt) {\n    if (this.options.dismissable && evt.target === this.element) {\n      this.close();\n    }\n  }\n\n  /**\n   * Keypress event handler\n   * @param {Event} evt Event object\n   * @protected\n   */\n  onKeyPress(evt) {\n    // Only react to keys when this dialog is the top-most one.\n    if (this.z === Dialog.getTopLayer()) {\n      // If 'ESC' is pressed, close the dialog\n      if (this.options.dismissable && evt.which === Dialog.Keys.ESC) {\n        this.close();\n      }\n\n      // If the TAB key is being pressed, make sure the focus stays trapped within\n      // the dialog element.\n      if (evt.which === Dialog.Keys.TAB) {\n        Dialog._trapTabKey(this.element, evt);\n      }\n    }\n  }\n\n  /**\n   * The dialog has a height of 100vh, which, in mobile safari, is incorrect\n   * when the toolbars are visible, not allowing the user to scroll the full\n   * height of the content within it.\n   * The viewportHeight parameter is optional so that it can be read in the open()\n   * method with all the other DOM reads. This avoids read->write->read #perfmatters.\n   * @param {number} [viewportHeight=window.innerHeight] Height of the viewport.\n   * @protected\n   */\n  onResize(viewportHeight = window.innerHeight) {\n    this.element.style.height = viewportHeight + 'px';\n  }\n\n  /**\n   * Checks to see if a dialog is already open or animating If not, opens dialog.\n   * @param {boolean} [sync=false] Whether to open with transitions or not.\n   */\n  open(sync = false) {\n    if (this.isAnimating || this.isOpen) {\n      return;\n    }\n\n    const viewportHeight = window.innerHeight;\n    Dialog.focusedBeforeDialog = document.activeElement;\n    this._hasBodyScrollbar = document.body.clientWidth < window.innerWidth;\n    this._isFullscreen = this.element.classList.contains(Dialog.Classes.FULLSCREEN);\n\n    // Add aria-hidden to other top-level things.\n    const siblings = Dialog._getSiblings(this.element);\n    const originals = siblings.map(element => element.getAttribute('aria-hidden'));\n    siblings.forEach((element, i) => {\n      if (originals[i]) {\n        element.setAttribute('data-odo-dialog-original', originals[i]);\n      }\n      element.setAttribute('aria-hidden', true);\n    });\n\n    // If there is already an open dialog, increase the z-index of this dialog's\n    // main element and backdrop above the open one.\n    if (Dialog.getOpenDialogCount() > 0) {\n      this.handleOtherOpenDialogs();\n    }\n\n    this.isOpen = true;\n    this.onResize(viewportHeight);\n    this.element.removeAttribute('aria-hidden');\n    this.element.classList.add(Dialog.Classes.OPEN);\n    this.element.classList.add(Dialog.Classes.ENTER);\n    if (Dialog.SCROLLBAR_WIDTH) {\n      document.body.style.paddingRight = Dialog.SCROLLBAR_WIDTH + 'px';\n    }\n    document.body.classList.add(Dialog.Classes.BODY_OPEN);\n    document.body.insertBefore(this.backdrop, this.element.nextSibling);\n    this.element.scrollTop = 0;\n\n    this._applyScrollFix();\n\n    this.element.focus();\n\n    document.addEventListener('keydown', this.onKeyPress);\n    window.addEventListener('resize', this.onWindowResize);\n    this.element.addEventListener('click', this.onClick);\n    this._closers.forEach((element) => {\n      element.addEventListener('click', this.close);\n    });\n\n    if (sync === true) {\n      this._openNext();\n      this._opened();\n    } else {\n      Dialog._nextFrame(() => {\n        this._openNext();\n        onTransitionEnd(this.element, this._opened, this, null, 1000);\n      });\n    }\n  }\n\n  /**\n   * Start the transition for opening the dialog.\n   */\n  _openNext() {\n    this.isAnimating = true;\n    // Now that the dialog is no longer display:none, the scrollHeight can be measured.\n    const scrollbarOffset = this._getScrollbarOffset();\n    if (!this._isFullscreen && scrollbarOffset > 0) {\n      this.element.style.paddingRight = scrollbarOffset + 'px';\n    }\n\n    this.element.classList.remove(Dialog.Classes.ENTER);\n    this.element.classList.add(Dialog.Classes.ENTERING);\n  }\n\n  /**\n   * Handle the end of the open transition. Emits OPENED event.\n   */\n  _opened() {\n    this.element.classList.remove(Dialog.Classes.ENTERING);\n    this.element.classList.add(Dialog.Classes.VISIBLE);\n    this.isAnimating = false;\n    this.emit(Dialog.EventType.OPENED);\n  }\n\n  /**\n   * Hides dialog\n   * @param {boolean} [sync=false] Whether to close with transitions or not.\n   */\n  close(sync = false) {\n    if (this.isAnimating || !this.isOpen) {\n      return;\n    }\n\n    // Remove aria-hidden to other top-level things.\n    const siblings = Dialog._getSiblings(this.element);\n    const originals = siblings.map(element => element.getAttribute('data-odo-dialog-original'));\n    siblings.forEach((element, i) => {\n      if (originals[i]) {\n        element.setAttribute('aria-hidden', originals[i]);\n        element.removeAttribute('data-odo-dialog-original');\n      } else {\n        element.removeAttribute('aria-hidden');\n      }\n    });\n\n    this.isOpen = false;\n    this.element.classList.add(Dialog.Classes.LEAVE);\n    this.element.classList.remove(Dialog.Classes.VISIBLE);\n\n    ScrollFix.remove(this._scrollFixId);\n\n    // Support: IE11\n    // Clicking on an SVG element inside an <a> will set the `focusedBeforeDialog`\n    // to the SVG, but SVG doesn't have a `focus()` method in IE.\n    if (Dialog.focusedBeforeDialog && typeof Dialog.focusedBeforeDialog.focus === 'function') {\n      Dialog.focusedBeforeDialog.focus();\n    }\n\n    document.removeEventListener('keydown', this.onKeyPress);\n    window.removeEventListener('resize', this.onWindowResize);\n    this.element.removeEventListener('click', this.onClick);\n    this._closers.forEach((element) => {\n      element.removeEventListener('click', this.close);\n    });\n\n    if (sync === true) {\n      this._closeNext();\n      this._closed();\n    } else {\n      Dialog._nextFrame(() => {\n        this._closeNext();\n        onTransitionEnd(this.element, this._closed, this, null, 1000);\n      });\n    }\n  }\n\n  /**\n   * Start the transition for closing the dialog.\n   */\n  _closeNext() {\n    this.isAnimating = true;\n    this.element.classList.remove(Dialog.Classes.LEAVE);\n    this.element.classList.add(Dialog.Classes.LEAVING);\n  }\n\n  /**\n   * Handle the end of the close transition. Emits the CLOSED event.\n   */\n  _closed() {\n    this.isAnimating = false;\n    this.element.style.paddingRight = '';\n    this.element.setAttribute('aria-hidden', true);\n    this.element.classList.remove(Dialog.Classes.OPEN);\n    this.element.classList.remove(Dialog.Classes.LEAVING);\n    if (Dialog.getOpenDialogCount() === 0) {\n      document.body.style.paddingRight = '';\n      document.body.classList.remove(Dialog.Classes.BODY_OPEN);\n    }\n    document.body.removeChild(this.backdrop);\n    this.emit(Dialog.EventType.CLOSED);\n  }\n\n  /**\n   * Modify dialog z-indices and more because there are about to be multiple\n   * dialogs open at the same time.\n   * @protected\n   */\n  handleOtherOpenDialogs() {\n    this.z = Dialog.getTopLayer() + 20;\n    this.element.style.zIndex = this.z;\n    this.backdrop.style.zIndex = this.z - 5;\n\n    // When this dialog is closed, revert the z-index back to its original value.\n    this.once(Dialog.EventType.CLOSED, () => {\n      this.z = Dialog.Z_BASE;\n      this.element.style.zIndex = '';\n      this.backdrop.style.zIndex = '';\n\n      // Find new top dialog.\n      const zTop = Dialog.getTopLayer();\n\n      Dialog.Instances.forEach((instance) => {\n        if (instance.isOpen && instance.z === zTop) {\n          instance.didEnterForeground();\n        }\n      });\n    });\n\n    // Tell other dialogs they're going into the background.\n    Dialog.Instances.forEach((instance) => {\n      if (instance.isOpen && instance.id !== this.id) {\n        instance.didEnterBackground();\n      }\n    });\n  }\n\n  /**\n   * Dialog went into the background and has another dialog open above it.\n   * @protected\n   */\n  didEnterBackground() {\n    ScrollFix.remove(this._scrollFixId);\n  }\n\n  /**\n   * Dialog came back into the foreground after being in the background.\n   * @protected\n   */\n  didEnterForeground() {\n    this._applyScrollFix();\n  }\n\n  /**\n   * Close the dialog, remove event listeners and element references.\n   */\n  dispose() {\n    if (this.isOpen) {\n      this.close(true);\n    }\n\n    this.element = null;\n    this.content = null;\n    this.backdrop = null;\n    this._closers.length = 0;\n\n    pull(Dialog.Instances, this);\n\n    // If this is the last dialog (being disposed), remove the body listener.\n    if (Dialog.Instances.length === 0) {\n      document.body.removeEventListener('click', Dialog._handleTriggerClick);\n    }\n  }\n\n  /**\n   * Call a function after two animation frames. Using just one is unreliable\n   * when using animations to/from display:none elements or ones that are not\n   * yet in the DOM.\n   * @param {function} fn Function to call on the next frame.\n   */\n  static _nextFrame(fn) {\n    window.requestAnimationFrame(window.requestAnimationFrame.bind(null, fn));\n  }\n\n  /**\n   * Open the correct dialog when an element with `data-odo-dialog-open` attribute\n   * is clicked.\n   * @param {Event} evt Event object.\n   */\n  static _handleTriggerClick(evt) {\n    const trigger = evt.target.closest('[data-odo-dialog-open]');\n\n    if (trigger !== null) {\n      evt.preventDefault();\n      const id = trigger.getAttribute('data-odo-dialog-open');\n      const instance = Dialog.getDialogById(id);\n      instance.emit(Dialog.EventType.TRIGGER_CLICKED, trigger);\n      instance.open();\n    }\n  }\n\n  /**\n   * Trap the focus inside the given element.\n   * @param {Element} node\n   * @param {Event} evt\n   */\n  static _trapTabKey(node, evt) {\n    const focusableChildren = Dialog._getFocusableChildren(node);\n    const focusedItemIndex = focusableChildren.indexOf(document.activeElement);\n\n    // If the SHIFT key is being pressed while tabbing (moving backwards) and\n    // the currently focused item is the first one, move the focus to the last\n    // focusable item from the dialog element\n    if (evt.shiftKey && focusedItemIndex === 0) {\n      focusableChildren[focusableChildren.length - 1].focus();\n      evt.preventDefault();\n    // If the SHIFT key is not being pressed (moving forwards) and the currently\n    // focused item is the last one, move the focus to the first focusable item\n    // from the dialog element\n    } else if (!evt.shiftKey && focusedItemIndex === focusableChildren.length - 1) {\n      focusableChildren[0].focus();\n      evt.preventDefault();\n    }\n  }\n\n  /**\n   * Get the focusable children of the given element.\n   * @param {Element} element\n   * @return {Array.<Element>}\n   */\n  static _getFocusableChildren(element) {\n    return Array.from(element.querySelectorAll(FOCUSABLE_ELEMENTS))\n      .filter(Dialog._isVisibleElement);\n  }\n\n  /**\n   * Whether an element is visible (and therefore can receive focus). Uses\n   * `getClientRects` due to this issue:\n   * https://github.com/jquery/jquery/issues/2227\n   * http://jsfiddle.net/2tgw2yr3/\n   * @param {Element} el Element.\n   * @return {boolean}\n   */\n  static _isVisibleElement(el) {\n    return !!(el.offsetWidth || el.offsetHeight || el.getClientRects().length);\n  }\n\n  /**\n   * Retrieve the siblings of an element.\n   * @param {Element} element Element to get siblings for.\n   * @return {Array.<Element>}\n   */\n  static _getSiblings(element) {\n    const children = Array.from(element.parentNode.children);\n    const ignore = ['script', 'link', 'meta'];\n    return children.filter(node =>\n      node !== element && !ignore.includes(node.nodeName.toLowerCase()));\n  }\n\n  /**\n   * Calculate the width of the scrollbar because when the body has overflow:hidden,\n   * the scrollbar disappears.\n   * https://davidwalsh.name/detect-scrollbar-width\n   * @return {number}\n   */\n  static _getScrollbarWidth() {\n    // Create measurement node.\n    const scrollDiv = document.createElement('div');\n    scrollDiv.style.cssText = 'width:50px;height:50px;overflow:scroll;position:absolute;top:-9999px;';\n    document.body.appendChild(scrollDiv);\n\n    // Calculate the scrollbar width.\n    const scrollbarWidth = scrollDiv.offsetWidth - scrollDiv.clientWidth;\n\n    // Remove test element.\n    document.body.removeChild(scrollDiv);\n\n    return scrollbarWidth;\n  }\n\n  /**\n   * Unfortunately, the auto margins do not work for flex children in IE11 and\n   * below because the content element does have an explicit height set on it.\n   * @return {boolean}\n   */\n  static _autoMarginTest() {\n    const parent = document.createElement('div');\n    const child = document.createElement('div');\n    parent.style.cssText = 'display:flex;height:50px;width:50px;position:absolute;';\n    child.style.cssText = 'margin:auto;';\n    child.innerHTML = 'a';\n    parent.appendChild(child);\n    document.body.appendChild(parent);\n\n    const ret = child.offsetTop > 0;\n    document.body.removeChild(parent);\n\n    return ret;\n  }\n\n  /**\n   * Instantiates all instances of dialogs with the same settings\n   * @param {Object} options Object of all dialog options. Is optional.\n   * @return {Dialog[]}\n   */\n  static initializeAll(options) {\n    Dialog.disposeAll();\n\n    return Array.from(\n      document.querySelectorAll('.' + Dialog.Classes.BASE),\n      dialog => new Dialog(dialog, options),\n    );\n  }\n\n  /**\n   * Clear all references to dialogs so there are no duplicates.\n   */\n  static disposeAll() {\n    const clone = Dialog.Instances.slice();\n    clone.forEach((dialog) => {\n      dialog.dispose();\n    });\n  }\n\n  /**\n   * Retrieve a dialog instance by its id.\n   * @param {string} id Id of the dialog.\n   * @return {?Dialog} The dialog or undefined if there is no dialog with the given id.\n   */\n  static getDialogById(id) {\n    return Dialog.Instances.find(instance => instance.id === id);\n  }\n\n  /**\n   * Count how many dialogs are currently open.\n   * @return {number}\n   */\n  static getOpenDialogCount() {\n    return Dialog.Instances.filter(instance => instance.isOpen).length;\n  }\n\n  /**\n   * Find the z index of the top-most dialog instance.\n   * @return {number}\n   */\n  static getTopLayer() {\n    // eslint-disable-next-line prefer-spread\n    return Math.max.apply(Math, Dialog.Instances.map(instance => instance.z));\n  }\n}\n\n/** @enum {string} */\nDialog.Classes = {\n  BODY_OPEN: 'odo-dialog-open',\n  BASE: 'odo-dialog',\n  OPEN: 'odo-dialog--open',\n  ENTER: 'odo-dialog--enter',\n  ENTERING: 'odo-dialog--enter-active',\n  LEAVE: 'odo-dialog--leave',\n  LEAVING: 'odo-dialog--leave-active',\n  VISIBLE: 'odo-dialog--visible',\n  FULLSCREEN: 'odo-dialog--full',\n  NO_AUTO_MARGIN: 'odo-dialog--no-auto-margin',\n  BACKDROP: 'odo-dialog-backdrop',\n  CONTENT: 'odo-dialog__content',\n};\n\n/** @enum {string} */\nDialog.EventType = {\n  OPENED: 'ododialog:open',\n  CLOSED: 'ododialog:closed',\n  TRIGGER_CLICKED: 'ododialog:triggerclicked',\n};\n\n/** @enum {number} */\nDialog.Keys = {\n  ESC: 27,\n  TAB: 9,\n};\n\n/** @type {!Object} */\nDialog.Defaults = {\n  dismissable: true,\n  scrollableElement: '.odo-dialog',\n};\n\n/** @type {Dialog[]} */\nDialog.Instances = [];\n\nDialog.Z_BASE = 1050;\n\nDialog.ScrollFix = ScrollFix;\n\n/**\n * Element which had focus before the dialog opened.\n * @type {Element}\n */\nDialog.focusedBeforeDialog = null;\n\nDialog.SUPPORTS_AUTO_MARGINS = Dialog._autoMarginTest();\nDialog.SCROLLBAR_WIDTH = Dialog._getScrollbarWidth();\n\nexport default Dialog;\n"],"names":["ScrollFix","element","id","startY","scrollY","_createBoundEvents","_registerEvents","_touchStartBound","this","_onTouchStart","bind","_touchMoveBound","_onTouchMove","_preventDefaultBound","_preventDefault","body","addEventListener","evt","changedTouches","pageY","scrollTop","deltaY","offsetHeight","scrollHeight","preventDefault","stopPropagation","dispose","removeEventListener","Map","OdoDevice","HAS_TOUCH_EVENTS","randomString","_fixes","set","has","get","delete","FOCUSABLE_ELEMENTS","join","Dialog","opts","_TinyEmitter","Element","TypeError","options","Object","assign","Defaults","getAttribute","backdrop","document","createElement","className","Classes","BACKDROP","content","_this","getByClass","CONTENT","_closers","Array","from","querySelectorAll","_resizeId","_scrollFixId","isOpen","isAnimating","_hasBodyScrollbar","_originalBodyPadding","_isFullscreen","z","Z_BASE","Instances","push","length","_handleTriggerClick","classList","toggle","NO_AUTO_MARGIN","SUPPORTS_AUTO_MARGINS","_bindContexts","onResize","_addA11yAttributes","_ensureBodyChild","name","getElementsByClassName","onKeyPress","onClick","close","onWindowResize","undefined","tabIndex","setAttribute","parentNode","appendChild","_applyScrollFix","scrollableElement","matches","querySelector","add","_getScrollbarOffset","hasDialogScrollbar","documentElement","clientHeight","SCROLLBAR_WIDTH","dismissable","target","getTopLayer","which","Keys","ESC","TAB","_trapTabKey","viewportHeight","window","innerHeight","style","height","open","sync","focusedBeforeDialog","activeElement","clientWidth","innerWidth","contains","FULLSCREEN","siblings","_getSiblings","originals","map","forEach","i","getOpenDialogCount","handleOtherOpenDialogs","removeAttribute","OPEN","ENTER","paddingRight","BODY_OPEN","insertBefore","nextSibling","focus","_this2","_openNext","_opened","_nextFrame","scrollbarOffset","remove","ENTERING","VISIBLE","emit","EventType","OPENED","LEAVE","_this3","_closeNext","_closed","LEAVING","removeChild","CLOSED","zIndex","once","zTop","instance","didEnterForeground","_this4","didEnterBackground","fn","requestAnimationFrame","trigger","closest","getDialogById","TRIGGER_CLICKED","node","focusableChildren","_getFocusableChildren","focusedItemIndex","indexOf","shiftKey","filter","_isVisibleElement","el","offsetWidth","getClientRects","children","ignore","includes","nodeName","toLowerCase","_getScrollbarWidth","scrollDiv","cssText","scrollbarWidth","_autoMarginTest","parent","child","innerHTML","ret","offsetTop","initializeAll","disposeAll","BASE","dialog","slice","find","Math","max","apply","TinyEmitter"],"mappings":"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"}