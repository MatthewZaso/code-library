{"version":3,"file":"odo-background-video.min.js","sources":["../src/background-video.js"],"sourcesContent":["/**\n * @fileoverview Add a odo video component which plays in the background when\n * the element comes into view and falls back to an image if the browser cannot\n * autoplay video.\n *\n * @author glen@odopod.com (Glen Cheney)\n * @author Evan Vaughn\n */\n\nimport OdoVideo from '@odopod/odo-video';\nimport OdoWindowEvents from '@odopod/odo-window-events';\nimport OdoViewport from '@odopod/odo-viewport';\nimport OdoObjectFit from '@odopod/odo-object-fit';\nimport OdoResponsiveImages from '@odopod/odo-responsive-images';\n\nclass BackgroundVideo {\n  constructor(element) {\n    /**\n     * Main element.\n     * @type {Element}\n     */\n    this.element = element;\n\n    /**\n     * Odo video wrapper element.\n     * @type {Element}\n     */\n    this._odoVideoElement = this.element.querySelector('.odo-video');\n\n    /**\n     * Fallback image wrapper element.\n     * @type {Element}\n     */\n    this._odoImageElement = this.element.querySelector('.odo-background-video__fallback-img');\n\n    /**\n     * Whether the media elment is the video or not.\n     * @type {boolean}\n     */\n    this.isVideo = null;\n\n    /**\n     * A promise which resolves when the video loads or when the image loads.\n     * @type {Promise}\n     */\n    this.ready = new Promise((resolve) => {\n      this._resolve = resolve;\n    });\n\n    if (this._odoVideoElement) {\n      OdoVideo.autoplay.then(this._handleAutoplayResult.bind(this));\n    } else {\n      this._cannotAutoplay();\n    }\n\n    // Cover it on resizes.\n    this._resizeId = OdoWindowEvents.onResize(this._handleResize.bind(this));\n  }\n\n  _handleAutoplayResult(canAutoplay) {\n    if (canAutoplay) {\n      this._canAutoplay();\n    } else {\n      this._cannotAutoplay();\n    }\n  }\n\n  /**\n   * Browser supports autoplay. When the video enters the viewport it will autoplay.\n   */\n  _canAutoplay() {\n    // Reveal video element.\n    this._odoVideoElement.classList.remove('hidden');\n\n    // Initialize odo component.\n    this._video = new OdoVideo(this._odoVideoElement, {\n      controls: OdoVideo.Controls.NONE,\n      pauseOnClick: false,\n    });\n\n    this._viewportId = OdoViewport.add({\n      element: this._odoVideoElement,\n      threshold: '20%',\n      enter: this._play.bind(this),\n      exit: this._pause.bind(this),\n    });\n\n    const _this = this;\n\n    function done() {\n      this.removeEventListener('loadedmetadata', done);\n      this.removeEventListener('error', done);\n      _this._ready();\n    }\n\n    const videoEl = this._video.getVideoElement();\n    videoEl.addEventListener('loadedmetadata', done);\n    videoEl.addEventListener('error', done);\n\n    this._video.listenOnData(\n      OdoVideo.VideoEvents.LOADED_DATA,\n      this._showFirstFrame.bind(this),\n    );\n\n    this.isVideo = true;\n\n    // Use js to cover the video.\n    OdoObjectFit.cover(videoEl);\n  }\n\n  /**\n   * Browser doesn't support autoplaying video without user interaction, fall back\n   * to a static responsive image.\n   */\n  _cannotAutoplay() {\n    const img = this._odoImageElement.querySelector('img');\n    this._odoImageElement.classList.add('odo-responsive-img');\n    this._odoImageElement.classList.remove('hidden');\n\n    // Tell Odo about our new responsive image.\n    OdoResponsiveImages.add(this._odoImageElement);\n\n    const _this = this;\n\n    function done() {\n      this.removeEventListener('load', done);\n      this.removeEventListener('error', done);\n      _this._ready();\n    }\n\n    img.addEventListener('load', done);\n    img.addEventListener('error', done);\n\n    this.isVideo = false;\n\n    // Use js to cover the image.\n    OdoObjectFit.cover(img);\n  }\n\n  _play() {\n    this._video.play();\n  }\n\n  _pause() {\n    this._video.pause();\n  }\n\n  /**\n   * The image has loaded or the video has started playing.\n   * @private\n   */\n  _ready() {\n    this._resolve();\n  }\n\n  /**\n   * Set the video the first frame to trigger it to show up in Safari 8.\n   *\n   * TODO: this doesn't work when preload=\"metadata\" in Safari because it doesn't\n   * even download the first frame.\n   *\n   * @private\n   */\n  _showFirstFrame() {\n    if (!this._video.isPlaying) {\n      this._video.getVideoElement().currentTime = 0;\n    }\n  }\n\n  _handleResize() {\n    OdoObjectFit.cover(this.mediaElement);\n  }\n\n  get videoElement() {\n    return this._odoVideoElement;\n  }\n\n  get imageElement() {\n    return this._odoImageElement;\n  }\n\n  get mediaElement() {\n    if (this.isVideo) {\n      return this._video.getVideoElement();\n    }\n\n    return this._odoImageElement.querySelector('img');\n  }\n\n  dispose() {\n    OdoWindowEvents.remove(this._resizeId);\n    this._resizeId = null;\n\n    if (this._video) {\n      this._video.dispose();\n      OdoViewport.remove(this._viewportId);\n      this._viewportId = null;\n      this.isVideo = null;\n    }\n  }\n}\n\nexport default BackgroundVideo;\n"],"names":["element","_odoVideoElement","this","querySelector","_odoImageElement","isVideo","ready","Promise","resolve","_resolve","autoplay","then","_handleAutoplayResult","bind","_cannotAutoplay","_resizeId","OdoWindowEvents","onResize","_handleResize","canAutoplay","_canAutoplay","done","removeEventListener","_ready","classList","remove","_video","OdoVideo","Controls","NONE","_viewportId","OdoViewport","add","_play","_pause","_this","videoEl","getVideoElement","addEventListener","listenOnData","VideoEvents","LOADED_DATA","_showFirstFrame","cover","img","play","pause","isPlaying","currentTime","mediaElement","dispose"],"mappings":"0pCAgBcA,6BAKLA,QAAUA,OAMVC,iBAAmBC,KAAKF,QAAQG,cAAc,mBAM9CC,iBAAmBF,KAAKF,QAAQG,cAAc,4CAM9CE,QAAU,UAMVC,MAAQ,IAAIC,QAAQ,SAACC,KACnBC,SAAWD,IAGdN,KAAKD,mBACES,SAASC,KAAKT,KAAKU,sBAAsBC,KAAKX,YAElDY,uBAIFC,UAAYC,EAAgBC,SAASf,KAAKgB,cAAcL,KAAKX,0BAGpEU,+BAAsBO,GAChBA,OACGC,oBAEAN,+BAOTM,iCAmBWC,SACFC,oBAAoB,iBAAkBD,QACtCC,oBAAoB,QAASD,KAC5BE,cApBHtB,iBAAiBuB,UAAUC,OAAO,eAGlCC,OAAS,IAAIC,EAASzB,KAAKD,2BACpB0B,EAASC,SAASC,mBACd,SAGXC,YAAcC,EAAYC,aACpB9B,KAAKD,2BACH,YACJC,KAAK+B,MAAMpB,KAAKX,WACjBA,KAAKgC,OAAOrB,KAAKX,YAGnBiC,EAAQjC,KAQRkC,EAAUlC,KAAKwB,OAAOW,oBACpBC,iBAAiB,iBAAkBjB,KACnCiB,iBAAiB,QAASjB,QAE7BK,OAAOa,aACVZ,EAASa,YAAYC,YACrBvC,KAAKwC,gBAAgB7B,KAAKX,YAGvBG,SAAU,IAGFsC,MAAMP,gBAOrBtB,oCAUWO,SACFC,oBAAoB,OAAQD,QAC5BC,oBAAoB,QAASD,KAC5BE,aAZFqB,EAAM1C,KAAKE,iBAAiBD,cAAc,YAC3CC,iBAAiBoB,UAAUQ,IAAI,2BAC/B5B,iBAAiBoB,UAAUC,OAAO,YAGnBO,IAAI9B,KAAKE,sBAEvB+B,EAAQjC,OAQVoC,iBAAiB,OAAQjB,KACzBiB,iBAAiB,QAASjB,QAEzBhB,SAAU,IAGFsC,MAAMC,gBAGrBX,sBACOP,OAAOmB,oBAGdX,uBACOR,OAAOoB,qBAOdvB,uBACOd,wBAWPiC,2BACOxC,KAAKwB,OAAOqB,iBACVrB,OAAOW,kBAAkBW,YAAc,gBAIhD9B,2BACeyB,MAAMzC,KAAK+C,2BAmB1BC,qBACkBzB,OAAOvB,KAAKa,gBACvBA,UAAY,KAEbb,KAAKwB,cACFA,OAAOwB,YACAzB,OAAOvB,KAAK4B,kBACnBA,YAAc,UACdzB,QAAU,sDAvBVH,KAAKD,6DAILC,KAAKE,6DAIRF,KAAKG,QACAH,KAAKwB,OAAOW,kBAGdnC,KAAKE,iBAAiBD,cAAc"}