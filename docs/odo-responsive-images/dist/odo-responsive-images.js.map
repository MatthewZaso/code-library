{"version":3,"file":"odo-responsive-images.js","sources":["../node_modules/debounce/index.js","../src/responsive-images.js"],"sourcesContent":["/**\n * Returns a function, that, as long as it continues to be invoked, will not\n * be triggered. The function will be called after it stops being called for\n * N milliseconds. If `immediate` is passed, trigger the function on the\n * leading edge, instead of the trailing. The function also has a property 'clear' \n * that is a function which will clear the timer to prevent previously scheduled executions. \n *\n * @source underscore.js\n * @see http://unscriptable.com/2009/03/20/debouncing-javascript-methods/\n * @param {Function} function to wrap\n * @param {Number} timeout in ms (`100`)\n * @param {Boolean} whether to execute at the beginning (`false`)\n * @api public\n */\n\nmodule.exports = function debounce(func, wait, immediate){\n  var timeout, args, context, timestamp, result;\n  if (null == wait) wait = 100;\n\n  function later() {\n    var last = Date.now() - timestamp;\n\n    if (last < wait && last >= 0) {\n      timeout = setTimeout(later, wait - last);\n    } else {\n      timeout = null;\n      if (!immediate) {\n        result = func.apply(context, args);\n        context = args = null;\n      }\n    }\n  };\n\n  var debounced = function(){\n    context = this;\n    args = arguments;\n    timestamp = Date.now();\n    var callNow = immediate && !timeout;\n    if (!timeout) timeout = setTimeout(later, wait);\n    if (callNow) {\n      result = func.apply(context, args);\n      context = args = null;\n    }\n\n    return result;\n  };\n\n  debounced.clear = function() {\n    if (timeout) {\n      clearTimeout(timeout);\n      timeout = null;\n    }\n  };\n  \n  debounced.flush = function() {\n    if (timeout) {\n      result = func.apply(context, args);\n      context = args = null;\n      \n      clearTimeout(timeout);\n      timeout = null;\n    }\n  };\n\n  return debounced;\n};\n","import picturefill from 'picturefill';\nimport debounce from 'debounce';\nimport Viewport from '@odopod/odo-viewport';\n\n/**\n * If the first parameter is not an array, return an array containing the first\n * parameter.\n * @param {*} thing Anything.\n * @return {Array.<*>} Array of things.\n */\nfunction arrayify(thing) {\n  if (Array.isArray(thing)) {\n    return thing;\n  }\n\n  if (thing && typeof thing.length === 'number') {\n    return Array.from(thing);\n  }\n\n  return [thing];\n}\n\n/**\n * Move children from one element to another. Ignores <noscript> elements.\n * @param {Element} fromElement Element to move children from.\n * @param {Element} toElement Element to move children to.\n * @private\n */\nfunction transferChildren(fromElement, toElement) {\n  // Include comment nodes. Convert to array because the NodeList is \"live\"\n  // and will be updated when an element is removed from it.\n  const frag = document.createDocumentFragment();\n  const children = Array.from(fromElement.childNodes);\n\n  for (let i = 0; i < children.length; i++) {\n    if (children[i].nodeName !== 'NOSCRIPT') {\n      frag.appendChild(children[i]);\n    }\n  }\n\n  toElement.appendChild(frag);\n}\n\n/**\n * Whether the given thing is an element.\n * @param {*} thing Thing to test.\n * @return {boolean}\n */\nfunction isElement(thing) {\n  return thing && thing.nodeType === 1;\n}\n\nclass ResponsiveImages {\n  constructor() {\n    /**\n     * Because this class is a singleton, assign settings to the instance.\n     * @enum {string}\n     */\n    this.ClassName = {\n      IMAGE: 'odo-responsive-img',\n      LOADED: 'odo-responsive-img--loaded',\n    };\n\n    /**\n     * An array of viewport item ids and picture elements.\n     * @type {Array.<{id: string, element: Element}>}\n     */\n    this.images = [];\n\n    // Save context for this callback so it can easily be removed.\n    this._imageLoadHandler = this._handleImageLoad.bind(this);\n    this._imageInViewHandler = this._handleImageInView.bind(this);\n\n    /**\n     * Debounce calls to `_update`.\n     * @type {function}\n     */\n    this.updateOffsets = debounce(this._update, ResponsiveImages.DEBOUNCE_TIME);\n  }\n\n  initialize() {\n    // Ignore elements which are already <picture>.\n    this._add(Array.from(document.querySelectorAll(`.${this.ClassName.IMAGE}:not(picture)`)));\n  }\n\n  /**\n   * Add an array of images to track.\n   * @param {Array.<Element>} newImages Images array.\n   */\n  _add(newImages) {\n    const options = newImages.map(image => this._getViewportOptions(image));\n    const ids = Viewport.add(options);\n    this.images = this.images.concat(ids.map((id, i) => ({\n      id,\n      element: newImages[i],\n    })));\n  }\n\n  /**\n   * Retrieve options to give OdoViewport for an element.\n   * @param {Element} picture The picture/div element.\n   * @return {!Object} OdoViewportItem options.\n   */\n  _getViewportOptions(picture) {\n    return {\n      element: picture,\n      threshold: picture.getAttribute('data-threshold') || 0,\n      enter: this._imageInViewHandler,\n    };\n  }\n\n  /**\n   * Callback for when the image has entered the viewport. This triggers the image\n   * to start loading.\n   * @param {ViewportItem} viewportItem Data about the element entering view.\n   */\n  _handleImageInView(viewportItem) {\n    this._loadImage(viewportItem.element);\n  }\n\n  /**\n   * Given the parent placeholder div, load the responsive image inside it.\n   * @param {Element} placeholder An element with the odo responsive image class.\n   * @private\n   */\n  _loadImage(placeholder) {\n    let img = placeholder.querySelector('img');\n\n    if (!img) {\n      throw new Error('Unable to find <img> element within Odo Responsive Images placeholder.');\n    }\n\n    const srcset = img.getAttribute('data-srcset');\n\n    // Determine if this is img[srcset] or if it should be a <picture>.\n    if (srcset !== null) {\n      // Not sure what is best here, setting the property or the attribute, for both\n      // picturefill and native responsive images, so both are set.\n      img.srcset = srcset;\n      img.setAttribute('srcset', srcset);\n      img.removeAttribute('data-srcset');\n      placeholder._odoResponsiveImageUsed = true;\n    } else {\n      // Create a new picture element with the same contents and replace the\n      // placeholder with it.\n      const parent = placeholder.parentElement;\n      const picture = document.createElement('picture');\n      picture.className = placeholder.className;\n      transferChildren(placeholder, picture);\n      const type = placeholder.getAttribute('data-type');\n      if (type) {\n        picture.setAttribute('data-type', type);\n      }\n\n      img = picture.querySelector('img');\n\n      // Replace the placeholder element with the picture.\n      parent.replaceChild(picture, placeholder);\n      picture._odoResponsiveImageUsed = true;\n    }\n\n    // Splice out of array.\n    this._removeImageEntry(placeholder);\n\n    // Now that the DOM is in the final state, see if this image is already loaded.\n    if (this.isImageLoaded(img)) {\n      setTimeout(this._handleImageLoad.bind(this, {\n        target: img,\n      }), 30);\n    }\n\n    // When the image first loads, add the loaded class and possibly update\n    // the background-image property.\n    img.addEventListener('load', this._imageLoadHandler, false);\n    img.addEventListener('error', this._imageLoadHandler, false);\n\n    // Run picturefill on the new element.\n    picturefill({\n      elements: [img],\n    });\n  }\n\n  /**\n   * Retrieve the image object which matches the given placeholder element.\n   * @param {Element} placeholder Responsive image element wrapper (the one which\n   *     gets replaced when using <picture>).\n   * @return {?number} Index of the responsive image object.\n   */\n  _getImageIndexByPlaceholder(placeholder) {\n    let index = null;\n\n    for (let i = 0, len = this.images.length; i < len; i++) {\n      if (this.images[i].element === placeholder) {\n        index = i;\n        break;\n      }\n    }\n\n    return index;\n  }\n\n  /**\n   * Removes an image stored in the `images` array from the array and from the\n   * Viewport watcher.\n   * @param {Element} placeholder Placeholder element.\n   * @private\n   */\n  _removeImageEntry(placeholder) {\n    const index = this._getImageIndexByPlaceholder(placeholder);\n\n    // Unable to find the index of the placeholder image. It is either already\n    // loaded, or the \"placeholder\" was the replacement?\n    if (index === null) {\n      return;\n    }\n\n    Viewport.remove(this.images[index].id);\n    this.images.splice(index, 1);\n  }\n\n  /**\n   * Whether an image element has already been loaded.\n   * @param {HTMLImageElement} img The <img>.\n   * @return {boolean}\n   */\n  isImageLoaded(img) {\n    return img.naturalWidth > 0;\n  }\n\n  /**\n   * Determine if this is element should use a background image.\n   * @param {HTMLImageElement} img Image in question.\n   * @return {boolean}\n   */\n  _isBackgroundImage(img) {\n    return img.parentElement.getAttribute('data-type') === 'background';\n  }\n\n  /**\n   * Whether the given element is a Odo Responsive Image which is not already\n   * loading and has not been loaded yet.\n   * @param {Element} picture Element to test.\n   */\n  _isUnloadedResponsiveImage(picture) {\n    if (!isElement(picture)) {\n      throw new TypeError(`Odo Responsive Images requires an element. Got: \"${picture}\"`);\n    }\n\n    if (!picture.classList.contains(this.ClassName.IMAGE)) {\n      throw new TypeError(`${picture} is not a Odo Responsive Image.`);\n    }\n\n    // The _loadImage method adds this property to the picture (or div when using\n    // img[srcset]) after it has done its business.\n    return picture._odoResponsiveImageUsed !== true;\n  }\n\n  /**\n   * Whether the given element is already in the `images` object array.\n   * @param {Element} placeholder Element to test.\n   * @return {boolean}\n   */\n  isUntrackedImage(placeholder) {\n    return this._getImageIndexByPlaceholder(placeholder) === null;\n  }\n\n  /**\n   * Load event handler for images.\n   * @param {UIEvent} evt Image load event object.\n   */\n  _handleImageLoad(evt) {\n    const img = /** @type {HTMLImageElement} */ (evt.target);\n\n    // Exit early if this image is longer in the DOM.\n    if (!img.parentNode) {\n      return;\n    }\n\n    // Call debounced update offsets because once an image loads, it could\n    // offset everything below it on the page.\n    this.updateOffsets();\n\n    // Set the background image url if it has a [data-type=\"background\"] attribute.\n    if (this._isBackgroundImage(img)) {\n      this._updateBackgroundImage(img);\n    } else {\n      // No longer need to listen for the load event for <picture>s. It will be\n      // handled natively or by picturefill.\n      this._removeImageHandlers(img);\n    }\n\n    // Write to the DOM all at once if many images load at the same time.\n    requestAnimationFrame(() => {\n      // classList is smart enough not to change the className property if the\n      // element already has the class which is being added.\n      img.parentNode.classList.add(this.ClassName.LOADED);\n    });\n  }\n\n  /**\n   * Update the background image property with the current source of a responsive image.\n   * @param {HTMLImageElement} img Image element.\n   */\n  _updateBackgroundImage(img) {\n    img.parentNode.style.backgroundImage = `url(\"${(img.currentSrc || img.src)}\")`;\n  }\n\n  /**\n   * Notify the Viewport to update its value. This method is called when a new\n   * image loads. It should also be called manually if offsets on the page change.\n   */\n  _update() {\n    Viewport.update();\n  }\n\n  /**\n   * Remove the event listeners bound to the image.\n   * @param {Element} img Image element.\n   */\n  _removeImageHandlers(img) {\n    if (img) {\n      img.removeEventListener('load', this._imageLoadHandler, false);\n      img.removeEventListener('error', this._imageLoadHandler, false);\n    }\n  }\n\n  /**\n   * Clean up all references and listeners for current images.\n   */\n  flush() {\n    // Remove load listener for each image and stop the Viewport component\n    // from watching it.\n    this.images.forEach((image) => {\n      const img = image.element.querySelector('img');\n      this._removeImageHandlers(img);\n      Viewport.remove(image.id);\n    });\n\n    this.images.length = 0;\n\n    // Remove all `load` events from background images.\n    const selector = `.${this.ClassName.IMAGE}[data-type=\"background\"] img`;\n    Array.from(document.querySelectorAll(selector)).forEach((img) => {\n      this._removeImageHandlers(img);\n    });\n  }\n\n  /**\n   * Remove watched images from this component.\n   * @param {Element|Array.<Element>} placeholders An element or array of elements.\n   *     The element should be the parent element of the <img>.\n   */\n  remove(placeholders) {\n    arrayify(placeholders).forEach((placeholder) => {\n      this._removeImageEntry(placeholder);\n      this._removeImageHandlers(placeholder.querySelector('img'));\n    });\n  }\n\n  /**\n   * Add more images for the ResponsiveImages component to watch.\n   * @param {Element|Array.<Element>} pictures An element or array of elements.\n   *     The element should be the parent element of the <img>.\n   */\n  add(pictures) {\n    const pics = arrayify(pictures)\n      .filter(this._isUnloadedResponsiveImage, this)\n      .filter(this.isUntrackedImage, this);\n\n    if (pics.length === 0) {\n      return;\n    }\n\n    this._add(pics);\n  }\n\n  /**\n   * Force the load of an element or group of elements instead of waiting for it\n   * to come into the viewport.\n   * @param {Element|Array.<Element>} pictures An element or array of elements.\n   *     The element should be the parent element of the <img>.\n   */\n  load(pictures) {\n    arrayify(pictures)\n      .filter(this._isUnloadedResponsiveImage, this)\n      .forEach(this._loadImage, this);\n  }\n}\n\nResponsiveImages.DEBOUNCE_TIME = 300;\n\n// Create a single instance and return that.\nexport default new ResponsiveImages();\n"],"names":["debounce","func","wait","immediate","timeout","args","context","timestamp","result","later","last","Date","now","setTimeout","apply","debounced","arguments","callNow","clear","clearTimeout","flush","arrayify","thing","Array","isArray","length","from","transferChildren","fromElement","toElement","frag","document","createDocumentFragment","children","childNodes","i","nodeName","appendChild","isElement","nodeType","ResponsiveImages","ClassName","IMAGE","LOADED","images","_imageLoadHandler","_handleImageLoad","bind","_imageInViewHandler","_handleImageInView","updateOffsets","_update","DEBOUNCE_TIME","initialize","_add","querySelectorAll","newImages","options","map","_getViewportOptions","image","ids","Viewport","add","concat","id","element","picture","threshold","getAttribute","enter","viewportItem","_loadImage","placeholder","img","querySelector","Error","srcset","setAttribute","removeAttribute","_odoResponsiveImageUsed","parent","parentElement","createElement","className","type","replaceChild","_removeImageEntry","isImageLoaded","target","addEventListener","picturefill","elements","_getImageIndexByPlaceholder","index","len","remove","splice","naturalWidth","_isBackgroundImage","_isUnloadedResponsiveImage","TypeError","classList","contains","isUntrackedImage","evt","parentNode","_updateBackgroundImage","_removeImageHandlers","requestAnimationFrame","style","backgroundImage","currentSrc","src","update","removeEventListener","forEach","selector","placeholders","pictures","pics","filter","load"],"mappings":"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"}