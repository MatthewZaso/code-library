{"version":3,"file":"odo-dropdown.js","sources":["../src/dropdown.js"],"sourcesContent":["import OdoDevice from '@odopod/odo-device';\nimport { animation, dom, style } from '@odopod/odo-helpers';\nimport OdoBaseComponent from '@odopod/odo-base-component';\n\nlet id = 0;\nfunction uniqueId() {\n  id += 1;\n  return 'ododropdown-' + id;\n}\n\nclass Dropdown extends OdoBaseComponent {\n  constructor(element, options = {}) {\n    super(element);\n\n    /**\n     * Override any defaults with the given options.\n     * @type {Object}\n     */\n    this.options = Object.assign({}, Dropdown.Defaults, options);\n\n    /**\n     * Unique id for this instance.\n     * @type {string}\n     */\n    this.id = uniqueId();\n\n    /**\n     * Whether the dropdown is currently open.\n     * @type {boolean}\n     */\n    this._isOpen = false;\n\n    /**\n     * The <select> element.\n     * @type {HTMLSelectElement}\n     */\n    this._select = this.getElementByClass(Dropdown.Classes.SELECT);\n\n    // Give the select an id if it doesn't have one.\n    dom.giveId(this._select, this.id);\n\n    /**\n     * The <label> for the <select>.\n     * @type {?HTMLLabelElement}\n     */\n    this._label = document.querySelector(`label[for=\"${this._select.id}\"]`);\n\n    // Generate the custom markup for options.\n    if (this.options.insertMarkup) {\n      this._insertMarkup();\n    }\n\n    // Save Element references.\n    this._optionsContainer = this.getElementByClass(Dropdown.Classes.OPTIONS_CONTAINER);\n    this._button = this.getElementByClass(Dropdown.Classes.BUTTON);\n    this._placeholder = this.getElementByClass(Dropdown.Classes.DEFAULT);\n    this._valueContainer = this.getElementByClass(Dropdown.Classes.VALUE);\n\n    // Set the selected option.\n    this._selectedOption = this._getCustomSelectedOption();\n\n    this._onSelectChange = this._handleSelectChange.bind(this);\n    this._onPageClick = this._handlePageClick.bind(this);\n    this._onButtonClick = this._showOptions.bind(this);\n    this._onKey = this._handleKey.bind(this);\n\n    this._transitionId = null;\n\n    this._initialize();\n  }\n\n  /**\n   * Determines whether to create custom dropdown module,\n   * or use native select element\n   */\n  _initialize() {\n    this._valueContainer.setAttribute('aria-hidden', true);\n\n    if (this.options.useNative) {\n      this._initializeNativeDropdown();\n    } else {\n      this._initializeCustomDropdown();\n    }\n  }\n\n  /**\n   * Return the selected custom option element.\n   * @return {Element}\n   */\n  _getCustomSelectedOption() {\n    return this.getCustomOptions()[this._select.selectedIndex];\n  }\n\n  /**\n   * Insert the custom option html markup before the <select> element.\n   */\n  _insertMarkup() {\n    const markup = this.getCustomOptionsHtml();\n    this._select.insertAdjacentHTML('beforebegin', markup);\n  }\n\n  /**\n   * Listen for change events on the <select>.\n   */\n  _initializeNativeDropdown() {\n    this.element.classList.add(Dropdown.Classes.BASE_NATIVE);\n    this._select.addEventListener('change', this._onSelectChange);\n\n    // Hide the <button> from the screen reader so that it only reads the\n    // <select> element. The <select> is actually positioned on top of the\n    // <button> with zero opacity.\n    this._button.setAttribute('aria-hidden', true);\n    this._button.tabIndex = -1;\n  }\n\n  /**\n   * Listen for clicks to trigger the menu and keyboard input.\n   */\n  _initializeCustomDropdown() {\n    if (this._label) {\n      dom.giveId(this._label, this.id + '-label');\n      const id = this._label.id;\n      this._optionsContainer.setAttribute('aria-labelledby', id);\n    }\n\n    this._select.tabIndex = -1;\n    this._select.setAttribute('aria-hidden', true);\n    this._button.setAttribute('aria-haspopup', 'true');\n    this._button.setAttribute('aria-controls', this._select.id);\n    this._button.setAttribute('aria-expanded', false);\n\n    this._toggleButtonListener(true);\n    this.element.addEventListener('keydown', this._onKey);\n  }\n\n  /**\n   * Key down event occured.\n   * @param {KeyboardEvent} e Event object.\n   */\n  _handleKey(e) {\n    const code = e.which;\n\n    if (this._isOpen) {\n      switch (code) {\n        case Dropdown.Key.ESC:\n        case Dropdown.Key.TAB:\n          this._hideOptions();\n          break;\n\n        case Dropdown.Key.DOWN:\n        case Dropdown.Key.UP:\n          e.preventDefault();\n          Dropdown._moveFocus(code === Dropdown.Key.DOWN);\n          break;\n\n        case Dropdown.Key.SPACE:\n        case Dropdown.Key.ENTER:\n          e.preventDefault();\n          this._selectOption(e.target);\n          break;\n        // no default\n      }\n    } else {\n      switch (code) {\n        case Dropdown.Key.SPACE:\n        case Dropdown.Key.DOWN:\n        case Dropdown.Key.UP:\n        case Dropdown.Key.ENTER:\n          e.preventDefault();\n          this._showOptions();\n          break;\n        // no default\n      }\n    }\n  }\n\n  /**\n   * Transer focus from one option to the next or prev enabled option.\n   * @param {boolean} isNext Whether to focus on the next or previous option.\n   */\n  static _moveFocus(isNext) {\n    const selector = Dropdown.Selector.ENABLED_OPTION;\n    const enabledOption = isNext ?\n      Dropdown._nextMatch(document.activeElement, selector) :\n      Dropdown._prevMatch(document.activeElement, selector);\n\n    if (enabledOption) {\n      enabledOption.focus();\n    }\n  }\n\n  /**\n   * Find the next sibling which matches a selector.\n   * @param {Element} element Element to test.\n   * @param {string} selector Selector to match.\n   * @return {?Element} The element or null if there isn't one.\n   */\n  static _nextMatch(element, selector) {\n    while ((element = element.nextElementSibling)) { // eslint-disable-line\n      if (element.matches(selector)) {\n        return element;\n      }\n    }\n\n    return null;\n  }\n\n  /**\n   * Find the previous sibling which matches a selector.\n   * @param {Element} element Element to test.\n   * @param {string} selector Selector to match.\n   * @return {?Element} The element or null if there isn't one.\n   */\n  static _prevMatch(element, selector) {\n    while ((element = element.previousElementSibling)) { // eslint-disable-line\n      if (element.matches(selector)) {\n        return element;\n      }\n    }\n\n    return null;\n  }\n\n  /**\n   * Delegated click event on the document. Check to see if it was an option,\n   * otherwise hide the dropdown menu.\n   * @param {MouseEvent} e Event object.\n   */\n  _handlePageClick(e) {\n    const option = e.target.closest('.' + Dropdown.Classes.OPTION);\n    if (option) {\n      this._selectOption(option);\n    } else {\n      this._hideOptions();\n    }\n  }\n\n  /**\n   * Set the current value from an option element.\n   * @param {Element} option Custom option element.\n   */\n  _selectOption(option) {\n    // Avoid selecting disabled options or a target which is not an option (if\n    // the user rapidly presses space|enter, this method could be called with\n    // an event target which is not an option element because the transition\n    // hasn't finished).\n    if (option.classList.contains(Dropdown.Classes.OPTION_DISABLED) ||\n        !option.classList.contains(Dropdown.Classes.OPTION)) {\n      return;\n    }\n\n    const value = option.getAttribute('data-value');\n    this.value = value;\n    this._hideOptions();\n\n    // Emit event to notify watchers that this has changed.\n    this.emit(Dropdown.EventType.CHANGE, {\n      name: this.select.name,\n      value: this.value,\n    });\n  }\n\n  /**\n   * The native <select> input changed. Update the display.\n   */\n  _handleSelectChange() {\n    this.value = this._select.value;\n\n    // Emit event to notify watchers that this has changed.\n    this.emit(Dropdown.EventType.CHANGE, {\n      name: this.select.name,\n      value: this.value,\n    });\n  }\n\n  /**\n   * Add or remove click listener for custom select display element\n   * @params {boolean} add Whether to add or remove click listener\n   */\n  _toggleButtonListener(add) {\n    if (add) {\n      this._button.addEventListener('click', this._onButtonClick);\n    } else {\n      this._button.removeEventListener('click', this._onButtonClick);\n    }\n  }\n\n  /**\n   * Show the options dropdown menu.\n   */\n  _showOptions() {\n    this._isOpen = true;\n\n    // Clear any pending transition ends.\n    animation.cancelTransitionEnd(this._transitionId);\n\n    // Remove click listener on button.\n    this._toggleButtonListener(false);\n\n    this.element.classList.add(Dropdown.Classes.OPEN);\n    this._optionsContainer.setAttribute('aria-hidden', false);\n    this._button.setAttribute('aria-expanded', true);\n    this._button.tabIndex = -1;\n    style.causeLayout(this._optionsContainer);\n    this._optionsContainer.classList.add(Dropdown.Classes.OPTIONS_CONTAINER_OPEN);\n    this._transitionId = animation.onTransitionEnd(this._optionsContainer,\n      this._handleOptionsShown, this);\n  }\n\n  /**\n   * Options dropdown finished show animation.\n   */\n  _handleOptionsShown() {\n    document.body.addEventListener('click', this._onPageClick);\n\n    // If all the options are disabled, a selected option doesn't exist.\n    if (this._selectedOption) {\n      this._selectedOption.focus();\n    }\n  }\n\n  /**\n   * Hide the options dropdown.\n   */\n  _hideOptions() {\n    this._isOpen = false;\n\n    // Clear any pending transition ends.\n    animation.cancelTransitionEnd(this._transitionId);\n\n    document.body.removeEventListener('click', this._onPageClick);\n    this._optionsContainer.setAttribute('aria-hidden', true);\n    this._button.tabIndex = 0;\n    this._button.setAttribute('aria-expanded', false);\n    this._optionsContainer.classList.remove(Dropdown.Classes.OPTIONS_CONTAINER_OPEN);\n    this._transitionId = animation.onTransitionEnd(this._optionsContainer,\n      this._handleOptionsHidden, this);\n  }\n\n  /**\n   * Options dropdown finished hiding.\n   */\n  _handleOptionsHidden() {\n    this.element.classList.remove(Dropdown.Classes.OPEN);\n    this._button.focus();\n    this._toggleButtonListener(true);\n  }\n\n  /**\n   * Generate the HTML to show on non-touch devices.\n   * @return {string} A string of HTML.\n   * @protected\n   */\n  getCustomOptionsHtml() {\n    return `<div class=\"${Dropdown.Classes.OPTIONS_CONTAINER}\" role=\"menu\" aria-hidden=\"true\">` +\n      this.getOptionsMarkup() +\n      '</div>';\n  }\n\n  /**\n   * Generate an HTML string for custom options based on the current options\n   * in the <select>\n   * @return {string} Markup.\n   * @protected\n   */\n  getOptionsMarkup() {\n    return this.getNativeOptions().reduce((str, option) => str + this.getOptionMarkup(option), '');\n  }\n\n  /**\n   * Create an HTML string to be used for a custom option.\n   * @param {HTMLOptionElement} option Native option element.\n   * @return {string} Markup.\n   * @protected\n   */\n  getOptionMarkup(option) {\n    const selected = option.selected ? ' ' + Dropdown.Classes.OPTION_SELECTED : '';\n    const disabled = option.disabled ? ' ' + Dropdown.Classes.OPTION_DISABLED : '';\n    const className = Dropdown.Classes.OPTION + selected + disabled;\n    return `<div class=\"${className}\" data-value=\"${option.value}\" tabindex=\"-1\" role=\"menuitem\">` +\n      option.text + '</div>';\n  }\n\n  /**\n   * Return an array of custom option elements.\n   * @return {Array.<HTMLDivElement>}\n   */\n  getCustomOptions() {\n    return this.getElementsByClass(Dropdown.Classes.OPTION);\n  }\n\n  /**\n   * Return an array of option elements.\n   * @return {Array.<HTMLOptionElement>}\n   */\n  getNativeOptions() {\n    return Array.from(this.select.options);\n  }\n\n  /**\n   * Retrieve the text to display inside the button.\n   * @param {number} selectedIndex Index of the selected option.\n   * @return {string} Text to display.\n   * @protected\n   */\n  getDisplayText(selectedIndex) {\n    return this.select.options[selectedIndex].text;\n  }\n\n  /**\n   * Retrieve the selected index of the <select>\n   * @return {number}\n   */\n  get selectedIndex() {\n    return this._select.selectedIndex;\n  }\n\n  /**\n   * Set the selected option by index.\n   * @param {number} index Index to select.\n   */\n  set selectedIndex(index) {\n    this.value = this._select.options[index].value;\n  }\n\n  /**\n   * Returns the <select>.\n   * @return {HTMLSelectElement}\n   */\n  get select() {\n    return this._select;\n  }\n\n  /**\n   * Returns the button to open the select menu.\n   * @return {HTMLButtonElement}\n   */\n  get button() {\n    return this._button;\n  }\n\n  /**\n   * Return the display text for the currently selected option.\n   * @returns {string}\n   */\n  get selectedText() {\n    return this._select.options[this._select.selectedIndex].text;\n  }\n\n  /**\n   * Retrieve the selected value.\n   * @return {string}\n   */\n  get value() {\n    return this._select.value;\n  }\n\n  /**\n   * Set the value of the <select> and the custom menu.\n   * @param {string} value Value which matches one of the options.\n   */\n  set value(value) {\n    // Remove the old selected class.\n    if (this._selectedOption) {\n      this._selectedOption.classList.remove(Dropdown.Classes.OPTION_SELECTED);\n    }\n\n    // Set new value.\n    this._select.value = value;\n\n    // Update currently selected option.\n    this._selectedOption = this._getCustomSelectedOption();\n\n    if (this._selectedOption) {\n      // Read the text for the new value.\n      const text = this.getDisplayText(this.selectedIndex);\n\n      this._selectedOption.classList.add(Dropdown.Classes.OPTION_SELECTED);\n\n      // Update display.\n      this._placeholder.style.display = 'none';\n      this._placeholder.setAttribute('aria-hidden', true);\n      this._valueContainer.textContent = text;\n      this._valueContainer.removeAttribute('aria-hidden');\n    } else {\n      this._placeholder.style.display = '';\n      this._placeholder.removeAttribute('aria-hidden');\n      this._valueContainer.textContent = '';\n      this._valueContainer.setAttribute('aria-hidden', true);\n    }\n  }\n\n  /**\n   * Get the disabled state of the component.\n   * @return {boolean}\n   */\n  get disabled() {\n    return this.select.disabled;\n  }\n\n  /**\n   * Set the disabled state of the component.\n   * @param {boolean} isDisabled Whether it's disabled or not.\n   */\n  set disabled(isDisabled) {\n    this.select.disabled = isDisabled;\n    this.button.disabled = isDisabled;\n  }\n\n  /**\n   * Toggle the state of an option.\n   * @param {string} value Value of the option to toggle.\n   * @param {boolean} isDisabled Whether to disable it or not.\n   * @return {Dropdown} This instance for chaining.\n   */\n  toggleOptionByValue(value, isDisabled) {\n    const customOption = this._optionsContainer.querySelector(`[data-value=\"${value}\"]`);\n    const nativeOption = this._select.querySelector(`[value=\"${value}\"]`);\n\n    customOption.classList.toggle(Dropdown.Classes.OPTION_DISABLED, isDisabled);\n    if (isDisabled) {\n      customOption.setAttribute('aria-disabled', true);\n    } else {\n      customOption.removeAttribute('aria-disabled');\n    }\n\n    nativeOption.disabled = isDisabled;\n\n    return this;\n  }\n\n  /**\n   * Disable an option.\n   * @param {string} value Value of the option to disable.\n   * @return {Dropdown} This instance.\n   */\n  disableOptionByValue(value) {\n    return this.toggleOptionByValue(value, true);\n  }\n\n  /**\n   * Enable an option.\n   * @param {string} value Value of the option to enable.\n   * @return {Dropdown} This instance.\n   */\n  enableOptionByValue(value) {\n    return this.toggleOptionByValue(value, false);\n  }\n\n  dispose() {\n    this._select.removeEventListener('change', this._onSelectChange);\n    this._button.removeEventListener('click', this._onButtonClick);\n    document.body.removeEventListener('click', this._onPageClick);\n    this._optionsContainer.parentNode.removeChild(this._optionsContainer);\n\n    // Prefer resetting the tabIndex property by using removeAttribute to lets the\n    // browser decide if it should go back to 0 (like if it was a button) or to\n    // -1 if it wasn't originally focusable.\n    this._select.removeAttribute('tabindex');\n    this._select.removeAttribute('aria-hidden');\n    this._button.removeAttribute('tabindex');\n    this._button.removeAttribute('aria-hidden');\n    this._button.removeAttribute('aria-haspopup');\n    this._button.removeAttribute('aria-controls');\n    this._button.removeAttribute('aria-expanded');\n\n    this._selectedOption = null;\n    this._optionsContainer = null;\n    this._button = null;\n    this._placeholder = null;\n    this._valueContainer = null;\n    this._select = null;\n    super.dispose();\n  }\n}\n\nDropdown.Classes = {\n  BASE: 'odo-dropdown',\n  OPEN: 'odo-dropdown--open',\n  BUTTON: 'odo-dropdown__button',\n  OPTIONS_CONTAINER_OPEN: 'odo-dropdown__options--open',\n  OPTIONS_CONTAINER: 'odo-dropdown__options',\n  OPTION: 'odo-dropdown__option',\n  OPTION_SELECTED: 'odo-dropdown__option--active',\n  OPTION_DISABLED: 'odo-dropdown__option--disabled',\n  SELECT: 'odo-dropdown__select',\n  VALUE: 'odo-dropdown__value',\n  DEFAULT: 'odo-dropdown__default',\n  BASE_NATIVE: 'odo-dropdown--native',\n};\n\nDropdown.Key = {\n  TAB: 9,\n  ENTER: 13,\n  ESC: 27,\n  SPACE: 32,\n  UP: 38,\n  DOWN: 40,\n};\n\nDropdown.EventType = {\n  CHANGE: 'ododropdown:change',\n};\n\nDropdown.Selector = {\n  ENABLED_OPTION: `.${Dropdown.Classes.OPTION}:not(.${Dropdown.Classes.OPTION_DISABLED})`,\n};\n\nDropdown.Defaults = {\n  insertMarkup: true,\n  useNative: OdoDevice.HAS_TOUCH_EVENTS,\n};\n\nexport default Dropdown;\n"],"names":["id","uniqueId","Dropdown","element","options","Object","assign","Defaults","_isOpen","_select","getElementByClass","Classes","SELECT","giveId","_label","document","querySelector","insertMarkup","_insertMarkup","_optionsContainer","OPTIONS_CONTAINER","_button","BUTTON","_placeholder","DEFAULT","_valueContainer","VALUE","_selectedOption","_getCustomSelectedOption","_onSelectChange","_handleSelectChange","bind","_onPageClick","_handlePageClick","_onButtonClick","_showOptions","_onKey","_handleKey","_transitionId","_initialize","setAttribute","useNative","_initializeNativeDropdown","_initializeCustomDropdown","getCustomOptions","selectedIndex","markup","getCustomOptionsHtml","insertAdjacentHTML","classList","add","BASE_NATIVE","addEventListener","tabIndex","_toggleButtonListener","e","code","which","Key","ESC","TAB","_hideOptions","DOWN","UP","preventDefault","_moveFocus","SPACE","ENTER","_selectOption","target","isNext","selector","Selector","ENABLED_OPTION","enabledOption","_nextMatch","activeElement","_prevMatch","focus","nextElementSibling","matches","previousElementSibling","option","closest","OPTION","contains","OPTION_DISABLED","value","getAttribute","emit","EventType","CHANGE","select","name","removeEventListener","cancelTransitionEnd","OPEN","causeLayout","OPTIONS_CONTAINER_OPEN","animation","onTransitionEnd","_handleOptionsShown","body","remove","_handleOptionsHidden","getOptionsMarkup","getNativeOptions","reduce","str","getOptionMarkup","selected","OPTION_SELECTED","disabled","className","text","getElementsByClass","Array","from","getDisplayText","toggleOptionByValue","isDisabled","customOption","nativeOption","toggle","removeAttribute","disableOptionByValue","enableOptionByValue","dispose","parentNode","removeChild","index","style","display","textContent","button","OdoBaseComponent","OdoDevice","HAS_TOUCH_EVENTS"],"mappings":"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"}