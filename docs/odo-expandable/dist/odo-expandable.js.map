{"version":3,"file":"odo-expandable.js","sources":["../src/settings.js","../src/expandable-item.js","../src/expandable-group.js","../src/expandable-accordion.js","../src/expandable.js"],"sourcesContent":["export default {\n  ClassName: {\n    TRIGGER_OPEN: 'odo-expandable__trigger--open',\n    TARGET_OPEN: 'odo-expandable__target--open',\n  },\n  Attribute: {\n    TRIGGER: 'data-expandable-trigger',\n    GROUP: 'data-expandable-group',\n    ANIMATED: 'data-expandable-animated',\n  },\n  Defaults: {\n    groupedItem: false,\n  },\n};\n","/**\n * @fileoverview An basic, expandable component that has both a trigger\n * and a target to open.\n *\n * @author Matt Zaso <matt.zaso@odopod.com>\n */\nimport Settings from './settings';\n\nclass ExpandableItem {\n  constructor(id, options = {}) {\n    /** @type {string} */\n    this.id = id;\n\n    /**\n     * Override any defaults with the given options.\n     * @type {Object}\n     */\n    this.options = Object.assign({}, Settings.Defaults, options);\n\n    /** @type {Element} */\n    this.trigger = document.body.querySelector(`[${Settings.Attribute.TRIGGER}=\"${id}\"]`);\n\n    /** @type {Element} */\n    this.target = document.getElementById(id);\n\n    /** @type {boolean} */\n    this.isOpen = this.target.classList.contains(Settings.ClassName.TARGET_OPEN);\n\n    if (!this.trigger.id) {\n      this.trigger.id = `odo-expandable-trigger--${this.id}`;\n    }\n\n    this._setA11yAttributes();\n\n    if (this.isOpen) {\n      this.open();\n    }\n\n    if (!this.options.groupedItem) {\n      this._onTriggerClick = this._triggerClickHandler.bind(this);\n      document.body.addEventListener('click', this._onTriggerClick);\n    }\n  }\n\n  /**\n   * Handler for clicks on the trigger.\n   * @param {Event} evt Event object.\n   * @private\n   */\n  _triggerClickHandler(evt) {\n    const closest = evt.target.closest(`[${Settings.Attribute.TRIGGER}]`);\n\n    if (closest === this.trigger) {\n      evt.preventDefault();\n      this.toggle();\n    }\n  }\n\n  /**\n   * Sets the appropriate ARIA attributes for a11y.\n   * @private\n   */\n  _setA11yAttributes() {\n    this.trigger.setAttribute('aria-expanded', this.isOpen.toString());\n    this.trigger.setAttribute('aria-controls', this.id);\n\n    this.target.setAttribute('aria-labelledby', this.trigger.id);\n    this.target.setAttribute('aria-hidden', (!this.isOpen).toString());\n  }\n\n  /**\n   * Removes the ARIA attributes assigned on instantiation.\n   * @private\n   */\n  _removeA11yAttributes() {\n    this.trigger.removeAttribute('aria-expanded');\n    this.trigger.removeAttribute('aria-controls');\n\n    this.target.removeAttribute('aria-labelledby');\n    this.target.removeAttribute('aria-hidden');\n  }\n\n  /**\n   * Toggles the expandable's state (open/closed).\n   */\n  toggle() {\n    if (this.isOpen) {\n      this.close();\n    } else {\n      this.open();\n    }\n  }\n\n  /**\n   * Opens the expandable.\n   */\n  open() {\n    this.target.classList.add(Settings.ClassName.TARGET_OPEN);\n    this.trigger.classList.add(Settings.ClassName.TRIGGER_OPEN);\n    this.trigger.setAttribute('aria-expanded', 'true');\n    this.target.setAttribute('aria-hidden', 'false');\n    this.isOpen = true;\n  }\n\n  /**\n   * Closes the expandable.\n   */\n  close() {\n    this.target.classList.remove(Settings.ClassName.TARGET_OPEN);\n    this.trigger.classList.remove(Settings.ClassName.TRIGGER_OPEN);\n    this.trigger.setAttribute('aria-expanded', 'false');\n    this.target.setAttribute('aria-hidden', 'true');\n    this.isOpen = false;\n  }\n\n  /**\n   * Dispose this instance and its handlers.\n   */\n  dispose() {\n    if (!this.options.groupedItem) {\n      document.body.removeEventListener('click', this._onTriggerClick);\n    }\n\n    this._removeA11yAttributes();\n  }\n}\n\nObject.assign(ExpandableItem, Settings);\n\nexport default ExpandableItem;\n","/**\n * @fileoverview A wrapper for multiple Expandable elements that will\n * allow them to operate coherently in an accordion type fashion.\n *\n * @author Matt Zaso <matt.zaso@odopod.com>\n */\nimport Settings from './settings';\nimport ExpandableItem from './expandable-item';\n\nclass ExpandableGroup {\n  constructor(elements) {\n    /** @type {Array.<!Element>} */\n    this._elements = elements;\n\n    /**\n     * @type {Array.<!ExpandableItem>}\n     * @protected\n     */\n    this.expandables = elements.map(trigger => new ExpandableItem(\n      trigger.getAttribute(Settings.Attribute.TRIGGER),\n      { groupedItem: true },\n    ));\n\n    this._onClick = this._onClickHandler.bind(this);\n    document.body.addEventListener('click', this._onClick);\n  }\n\n  /**\n   * Handler for clicks on the trigger.\n   * @param {MouseEvent} evt Event object.\n   * @private\n   */\n  _onClickHandler(evt) {\n    const closest = evt.target.closest(`[${Settings.Attribute.TRIGGER}]`);\n\n    if (this._elements.includes(closest)) {\n      evt.preventDefault();\n      this.toggleVisibility(closest.getAttribute(Settings.Attribute.TRIGGER));\n    }\n  }\n\n  /**\n   * Will iterate over all grouped items and toggle the selected one while collapsing all others.\n   * @param {string} id The ID of the selected target to expand.\n   * @private\n   */\n  toggleVisibility(id) {\n    this.expandables.forEach((expandable) => {\n      if (expandable.id === id) {\n        expandable.toggle();\n      } else {\n        expandable.close();\n      }\n    });\n  }\n\n  /**\n   * Dispose this instance and its handlers. Will also dispose all child\n   * instances.\n   * @public\n   */\n  dispose() {\n    document.body.removeEventListener('click', this._onClick);\n    this.expandables.forEach(item => item.dispose());\n  }\n}\n\nObject.assign(ExpandableGroup, Settings);\n\nexport default ExpandableGroup;\n","/**\n * @fileoverview A subclass of ExpandableGroup which includes some additional\n * features like scrolling and collapsing animations.\n *\n * @author Matt Zaso <matt.zaso@odopod.com>\n */\nimport { scrollTo } from '@odopod/odo-helpers';\nimport OdoWindowEvents from '@odopod/odo-window-events';\nimport ExpandableGroup from './expandable-group';\n\nclass ExpandableAccordion extends ExpandableGroup {\n  constructor(elements) {\n    super(elements);\n\n    /**\n     * @type {Array.<{id: string, offset: number}>} Object A map of the expandable offsets.\n     */\n    this._expandableOffsets = [];\n\n    // Set the initial value of each element based on its state.\n    this.update();\n\n    // A resize handler for when the DOM updates.\n    this._resizeId = OdoWindowEvents.onResize(this.update.bind(this));\n  }\n\n  /**\n   * Called by OdoWindowEvents when the browser is resized. Allows us to update\n   * our saved offsets and animate to their new positions.\n   * @private\n   */\n  update() {\n    // Find any already open expandables.\n    const openExpandables = this.expandables.map(expandable => expandable.isOpen);\n\n    // Set the transition duration to zero so there is no animation when measuring.\n    this.expandables.forEach((expandable) => {\n      expandable.target.style.transitionDuration = '0s';\n      expandable.close();\n      this._setHeight(expandable, false);\n    });\n\n    // Save offsets now that all expandables are collapsed.\n    this._expandableOffsets = this._getOffsets();\n\n    // Reopen any expandables that were open before.\n    this.expandables.forEach((expandable, i) => {\n      this._setHeight(expandable, openExpandables[i]);\n    });\n\n    // Cause the browser to do a layout and set the heights of the elements\n    // with a transition duration of zero.\n    this.expandables[0].trigger.offsetWidth; // eslint-disable-line no-unused-expressions\n\n    // Now that everything has been reset, enable transitions again.\n    this.expandables.forEach((expandable, i) => {\n      expandable.target.style.transitionDuration = '';\n      if (openExpandables[i]) {\n        expandable.open();\n      }\n    });\n  }\n\n  /**\n   * When an item is clicked, we animate the accordion.\n   * @override\n   */\n  toggleVisibility(id) {\n    this.expandables.forEach((expandable) => {\n      this._animateHeight(expandable, expandable.id === id);\n    });\n    super.toggleVisibility(id);\n    this._scrollToSelected(id);\n  }\n\n  /**\n   * On load and any other time the DOM updates, this function will save the offsets\n   * of each accordion item into an object so we don't have to read the DOM every time.\n   * @private\n   * @return {Array.<{id: string, offset: number}>}\n   */\n  _getOffsets() {\n    const scrollY = window.pageYOffset;\n    return this.expandables.map(expandable => ({\n      id: expandable.id,\n      offset: scrollY + expandable.trigger.getBoundingClientRect().top,\n    }));\n  }\n\n  /**\n   * When called we will check the accordion's position in the viewport and scroll\n   * the user into view if needed.\n   * @param {string} id The id of the ExpandableItem that was clicked.\n   * @private\n   */\n  _scrollToSelected(id) {\n    const item = this._expandableOffsets.find(item => item.id === id);\n    if (item.offset < window.pageYOffset) {\n      scrollTo(item.offset, 300);\n    }\n  }\n\n  /**\n   * Sets the height of a given Expandable item.\n   * @param {Expandable} expandable The Expandable instance to modify.\n   * @param {boolean} setToOpen Whether we setting the Expandable to it's open state.\n   */\n  _setHeight(expandable, setToOpen) {\n    const contentHeight = setToOpen ? expandable.target.firstElementChild.offsetHeight : 0;\n    expandable.target.style.height = `${contentHeight}px`;\n  }\n\n  /**\n   * Called if we need to alter the Expandable state. Only does so if either the same\n   * Expandable that is open is clicked or another one was clicked and this one needs\n   * to be closed.\n   * @param {Expandable} expandable The expandable to test and potentially alter.\n   * @param {boolean} isTarget Whether or not the current expandable was the one clicked.\n   */\n  _animateHeight(expandable, isTarget) {\n    if (isTarget || expandable.isOpen) {\n      this._setHeight(expandable, !expandable.isOpen);\n    }\n  }\n\n  /**\n   * Remove the resize handler and dispose.\n   * @override\n   */\n  dispose() {\n    super.dispose();\n    OdoWindowEvents.remove(this._resizeId);\n  }\n}\n\nexport default ExpandableAccordion;\n","import Settings from './settings';\nimport ExpandableGroup from './expandable-group';\nimport ExpandableItem from './expandable-item';\nimport ExpandableAccordion from './expandable-accordion';\n\n/**\n * Instantiates all instances of the expandable. Groups are instantiated separate from\n * Expandables and require different parameters. This helper chunks out and groups the\n * grouped expandables before instantiating all of them.\n *\n * @return {Array.<ExpandableItem|ExpandableGroup|ExpandableAccordion>} all instances of both types.\n * @public\n */\nexport function initializeAll() {\n  const elements = Array.from(document.querySelectorAll(`[${Settings.Attribute.TRIGGER}]`));\n\n  const singleInstances = [];\n  const groupInstances = [];\n  const groupIds = [];\n\n  elements.forEach((item) => {\n    const groupId = item.getAttribute(Settings.Attribute.GROUP);\n    if (groupId) {\n      if (!groupIds.includes(groupId)) {\n        const group = elements.filter(el => el.getAttribute(Settings.Attribute.GROUP) === groupId);\n        const isAnimated = group.some(el => el.hasAttribute(Settings.Attribute.ANIMATED));\n        groupInstances.push(isAnimated ?\n          new ExpandableAccordion(group) :\n          new ExpandableGroup(group));\n        groupIds.push(groupId);\n      }\n    } else {\n      singleInstances.push(new ExpandableItem(item.getAttribute(Settings.Attribute.TRIGGER)));\n    }\n  });\n\n  return singleInstances.concat(groupInstances);\n}\n\nexport { default as Settings } from './settings';\nexport { default as ExpandableItem } from './expandable-item';\nexport { default as ExpandableGroup } from './expandable-group';\nexport { default as ExpandableAccordion } from './expandable-accordion';\n"],"names":["ClassName","TRIGGER_OPEN","TARGET_OPEN","Attribute","TRIGGER","GROUP","ANIMATED","Defaults","groupedItem","ExpandableItem","id","options","Object","assign","Settings","trigger","document","body","querySelector","target","getElementById","isOpen","classList","contains","_setA11yAttributes","open","_onTriggerClick","_triggerClickHandler","bind","addEventListener","evt","closest","preventDefault","toggle","setAttribute","toString","_removeA11yAttributes","removeAttribute","close","add","remove","dispose","removeEventListener","ExpandableGroup","elements","_elements","expandables","map","getAttribute","_onClick","_onClickHandler","includes","toggleVisibility","forEach","expandable","item","ExpandableAccordion","_expandableOffsets","update","_resizeId","OdoWindowEvents","onResize","openExpandables","style","transitionDuration","_setHeight","_getOffsets","i","offsetWidth","_animateHeight","_scrollToSelected","scrollY","window","pageYOffset","offset","getBoundingClientRect","top","find","scrollTo","setToOpen","contentHeight","firstElementChild","offsetHeight","height","isTarget","initializeAll","Array","from","querySelectorAll","singleInstances","groupInstances","groupIds","groupId","group","filter","el","isAnimated","some","hasAttribute","push","concat"],"mappings":";;;;;;;;AAAA,iBAAe;EACbA,aAAW;EACTC,kBAAc,+BADL;EAETC,iBAAa;EAFJ,GADE;EAKbC,aAAW;EACTC,aAAS,yBADA;EAETC,WAAO,uBAFE;EAGTC,cAAU;EAHD,GALE;EAUbC,YAAU;EACRC,iBAAa;EADL;EAVG,CAAf;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ECAA;;;;;;AAMA;MAEMC;EACJ,0BAAYC,EAAZ,EAA8B;EAAA,QAAdC,OAAc,uEAAJ,EAAI;EAAA;;EAC5B;EACA,SAAKD,EAAL,GAAUA,EAAV;;EAEA;;;;EAIA,SAAKC,OAAL,GAAeC,OAAOC,MAAP,CAAc,EAAd,EAAkBC,SAASP,QAA3B,EAAqCI,OAArC,CAAf;;EAEA;EACA,SAAKI,OAAL,GAAeC,SAASC,IAAT,CAAcC,aAAd,OAAgCJ,SAASX,SAAT,CAAmBC,OAAnD,UAA+DM,EAA/D,QAAf;;EAEA;EACA,SAAKS,MAAL,GAAcH,SAASI,cAAT,CAAwBV,EAAxB,CAAd;;EAEA;EACA,SAAKW,MAAL,GAAc,KAAKF,MAAL,CAAYG,SAAZ,CAAsBC,QAAtB,CAA+BT,SAASd,SAAT,CAAmBE,WAAlD,CAAd;;EAEA,QAAI,CAAC,KAAKa,OAAL,CAAaL,EAAlB,EAAsB;EACpB,WAAKK,OAAL,CAAaL,EAAb,gCAA6C,KAAKA,EAAlD;EACD;;EAED,SAAKc,kBAAL;;EAEA,QAAI,KAAKH,MAAT,EAAiB;EACf,WAAKI,IAAL;EACD;;EAED,QAAI,CAAC,KAAKd,OAAL,CAAaH,WAAlB,EAA+B;EAC7B,WAAKkB,eAAL,GAAuB,KAAKC,oBAAL,CAA0BC,IAA1B,CAA+B,IAA/B,CAAvB;EACAZ,eAASC,IAAT,CAAcY,gBAAd,CAA+B,OAA/B,EAAwC,KAAKH,eAA7C;EACD;EACF;;EAED;;;;;;;6BAKAC,qDAAqBG,KAAK;EACxB,QAAMC,UAAUD,IAAIX,MAAJ,CAAWY,OAAX,OAAuBjB,SAASX,SAAT,CAAmBC,OAA1C,OAAhB;;EAEA,QAAI2B,YAAY,KAAKhB,OAArB,EAA8B;EAC5Be,UAAIE,cAAJ;EACA,WAAKC,MAAL;EACD;EACF;;EAED;;;;;;6BAIAT,mDAAqB;EACnB,SAAKT,OAAL,CAAamB,YAAb,CAA0B,eAA1B,EAA2C,KAAKb,MAAL,CAAYc,QAAZ,EAA3C;EACA,SAAKpB,OAAL,CAAamB,YAAb,CAA0B,eAA1B,EAA2C,KAAKxB,EAAhD;;EAEA,SAAKS,MAAL,CAAYe,YAAZ,CAAyB,iBAAzB,EAA4C,KAAKnB,OAAL,CAAaL,EAAzD;EACA,SAAKS,MAAL,CAAYe,YAAZ,CAAyB,aAAzB,EAAwC,CAAC,CAAC,KAAKb,MAAP,EAAec,QAAf,EAAxC;EACD;;EAED;;;;;;6BAIAC,yDAAwB;EACtB,SAAKrB,OAAL,CAAasB,eAAb,CAA6B,eAA7B;EACA,SAAKtB,OAAL,CAAasB,eAAb,CAA6B,eAA7B;;EAEA,SAAKlB,MAAL,CAAYkB,eAAZ,CAA4B,iBAA5B;EACA,SAAKlB,MAAL,CAAYkB,eAAZ,CAA4B,aAA5B;EACD;;EAED;;;;;6BAGAJ,2BAAS;EACP,QAAI,KAAKZ,MAAT,EAAiB;EACf,WAAKiB,KAAL;EACD,KAFD,MAEO;EACL,WAAKb,IAAL;EACD;EACF;;EAED;;;;;6BAGAA,uBAAO;EACL,SAAKN,MAAL,CAAYG,SAAZ,CAAsBiB,GAAtB,CAA0BzB,SAASd,SAAT,CAAmBE,WAA7C;EACA,SAAKa,OAAL,CAAaO,SAAb,CAAuBiB,GAAvB,CAA2BzB,SAASd,SAAT,CAAmBC,YAA9C;EACA,SAAKc,OAAL,CAAamB,YAAb,CAA0B,eAA1B,EAA2C,MAA3C;EACA,SAAKf,MAAL,CAAYe,YAAZ,CAAyB,aAAzB,EAAwC,OAAxC;EACA,SAAKb,MAAL,GAAc,IAAd;EACD;;EAED;;;;;6BAGAiB,yBAAQ;EACN,SAAKnB,MAAL,CAAYG,SAAZ,CAAsBkB,MAAtB,CAA6B1B,SAASd,SAAT,CAAmBE,WAAhD;EACA,SAAKa,OAAL,CAAaO,SAAb,CAAuBkB,MAAvB,CAA8B1B,SAASd,SAAT,CAAmBC,YAAjD;EACA,SAAKc,OAAL,CAAamB,YAAb,CAA0B,eAA1B,EAA2C,OAA3C;EACA,SAAKf,MAAL,CAAYe,YAAZ,CAAyB,aAAzB,EAAwC,MAAxC;EACA,SAAKb,MAAL,GAAc,KAAd;EACD;;EAED;;;;;6BAGAoB,6BAAU;EACR,QAAI,CAAC,KAAK9B,OAAL,CAAaH,WAAlB,EAA+B;EAC7BQ,eAASC,IAAT,CAAcyB,mBAAd,CAAkC,OAAlC,EAA2C,KAAKhB,eAAhD;EACD;;EAED,SAAKU,qBAAL;EACD;;;;;EAGHxB,OAAOC,MAAP,CAAcJ,cAAd,EAA8BK,QAA9B;;EC/HA;;;;;;AAMA;MAGM6B;EACJ,2BAAYC,QAAZ,EAAsB;EAAA;;EACpB;EACA,SAAKC,SAAL,GAAiBD,QAAjB;;EAEA;;;;EAIA,SAAKE,WAAL,GAAmBF,SAASG,GAAT,CAAa;EAAA,aAAW,IAAItC,cAAJ,CACzCM,QAAQiC,YAAR,CAAqBlC,SAASX,SAAT,CAAmBC,OAAxC,CADyC,EAEzC,EAAEI,aAAa,IAAf,EAFyC,CAAX;EAAA,KAAb,CAAnB;;EAKA,SAAKyC,QAAL,GAAgB,KAAKC,eAAL,CAAqBtB,IAArB,CAA0B,IAA1B,CAAhB;EACAZ,aAASC,IAAT,CAAcY,gBAAd,CAA+B,OAA/B,EAAwC,KAAKoB,QAA7C;EACD;;EAED;;;;;;;8BAKAC,2CAAgBpB,KAAK;EACnB,QAAMC,UAAUD,IAAIX,MAAJ,CAAWY,OAAX,OAAuBjB,SAASX,SAAT,CAAmBC,OAA1C,OAAhB;;EAEA,QAAI,KAAKyC,SAAL,CAAeM,QAAf,CAAwBpB,OAAxB,CAAJ,EAAsC;EACpCD,UAAIE,cAAJ;EACA,WAAKoB,gBAAL,CAAsBrB,QAAQiB,YAAR,CAAqBlC,SAASX,SAAT,CAAmBC,OAAxC,CAAtB;EACD;EACF;;EAED;;;;;;;8BAKAgD,6CAAiB1C,IAAI;EACnB,SAAKoC,WAAL,CAAiBO,OAAjB,CAAyB,UAACC,UAAD,EAAgB;EACvC,UAAIA,WAAW5C,EAAX,KAAkBA,EAAtB,EAA0B;EACxB4C,mBAAWrB,MAAX;EACD,OAFD,MAEO;EACLqB,mBAAWhB,KAAX;EACD;EACF,KAND;EAOD;;EAED;;;;;;;8BAKAG,6BAAU;EACRzB,aAASC,IAAT,CAAcyB,mBAAd,CAAkC,OAAlC,EAA2C,KAAKO,QAAhD;EACA,SAAKH,WAAL,CAAiBO,OAAjB,CAAyB;EAAA,aAAQE,KAAKd,OAAL,EAAR;EAAA,KAAzB;EACD;;;;;EAGH7B,OAAOC,MAAP,CAAc8B,eAAd,EAA+B7B,QAA/B;;ECnEA;;;;;;AAMA;MAIM0C;;;EACJ,+BAAYZ,QAAZ,EAAsB;EAAA;;EAGpB;;;EAHoB,gDACpB,4BAAMA,QAAN,CADoB;;EAMpB,UAAKa,kBAAL,GAA0B,EAA1B;;EAEA;EACA,UAAKC,MAAL;;EAEA;EACA,UAAKC,SAAL,GAAiBC,gBAAgBC,QAAhB,CAAyB,MAAKH,MAAL,CAAY9B,IAAZ,OAAzB,CAAjB;EAZoB;EAarB;;EAED;;;;;;;kCAKA8B,2BAAS;EAAA;;EACP;EACA,QAAMI,kBAAkB,KAAKhB,WAAL,CAAiBC,GAAjB,CAAqB;EAAA,aAAcO,WAAWjC,MAAzB;EAAA,KAArB,CAAxB;;EAEA;EACA,SAAKyB,WAAL,CAAiBO,OAAjB,CAAyB,UAACC,UAAD,EAAgB;EACvCA,iBAAWnC,MAAX,CAAkB4C,KAAlB,CAAwBC,kBAAxB,GAA6C,IAA7C;EACAV,iBAAWhB,KAAX;EACA,aAAK2B,UAAL,CAAgBX,UAAhB,EAA4B,KAA5B;EACD,KAJD;;EAMA;EACA,SAAKG,kBAAL,GAA0B,KAAKS,WAAL,EAA1B;;EAEA;EACA,SAAKpB,WAAL,CAAiBO,OAAjB,CAAyB,UAACC,UAAD,EAAaa,CAAb,EAAmB;EAC1C,aAAKF,UAAL,CAAgBX,UAAhB,EAA4BQ,gBAAgBK,CAAhB,CAA5B;EACD,KAFD;;EAIA;EACA;EACA,SAAKrB,WAAL,CAAiB,CAAjB,EAAoB/B,OAApB,CAA4BqD,WAA5B,CArBO;;EAuBP;EACA,SAAKtB,WAAL,CAAiBO,OAAjB,CAAyB,UAACC,UAAD,EAAaa,CAAb,EAAmB;EAC1Cb,iBAAWnC,MAAX,CAAkB4C,KAAlB,CAAwBC,kBAAxB,GAA6C,EAA7C;EACA,UAAIF,gBAAgBK,CAAhB,CAAJ,EAAwB;EACtBb,mBAAW7B,IAAX;EACD;EACF,KALD;EAMD;;EAED;;;;;;kCAIA2B,6CAAiB1C,IAAI;EAAA;;EACnB,SAAKoC,WAAL,CAAiBO,OAAjB,CAAyB,UAACC,UAAD,EAAgB;EACvC,aAAKe,cAAL,CAAoBf,UAApB,EAAgCA,WAAW5C,EAAX,KAAkBA,EAAlD;EACD,KAFD;EAGA,+BAAM0C,gBAAN,YAAuB1C,EAAvB;EACA,SAAK4D,iBAAL,CAAuB5D,EAAvB;EACD;;EAED;;;;;;;;kCAMAwD,qCAAc;EACZ,QAAMK,UAAUC,OAAOC,WAAvB;EACA,WAAO,KAAK3B,WAAL,CAAiBC,GAAjB,CAAqB;EAAA,aAAe;EACzCrC,YAAI4C,WAAW5C,EAD0B;EAEzCgE,gBAAQH,UAAUjB,WAAWvC,OAAX,CAAmB4D,qBAAnB,GAA2CC;EAFpB,OAAf;EAAA,KAArB,CAAP;EAID;;EAED;;;;;;;;kCAMAN,+CAAkB5D,IAAI;EACpB,QAAM6C,OAAO,KAAKE,kBAAL,CAAwBoB,IAAxB,CAA6B;EAAA,aAAQtB,KAAK7C,EAAL,KAAYA,EAApB;EAAA,KAA7B,CAAb;EACA,QAAI6C,KAAKmB,MAAL,GAAcF,OAAOC,WAAzB,EAAsC;EACpCK,0BAASvB,KAAKmB,MAAd,EAAsB,GAAtB;EACD;EACF;;EAED;;;;;;;kCAKAT,iCAAWX,YAAYyB,WAAW;EAChC,QAAMC,gBAAgBD,YAAYzB,WAAWnC,MAAX,CAAkB8D,iBAAlB,CAAoCC,YAAhD,GAA+D,CAArF;EACA5B,eAAWnC,MAAX,CAAkB4C,KAAlB,CAAwBoB,MAAxB,GAAoCH,aAApC;EACD;;EAED;;;;;;;;;kCAOAX,yCAAef,YAAY8B,UAAU;EACnC,QAAIA,YAAY9B,WAAWjC,MAA3B,EAAmC;EACjC,WAAK4C,UAAL,CAAgBX,UAAhB,EAA4B,CAACA,WAAWjC,MAAxC;EACD;EACF;;EAED;;;;;;kCAIAoB,6BAAU;EACR,+BAAMA,OAAN;EACAmB,oBAAgBpB,MAAhB,CAAuB,KAAKmB,SAA5B;EACD;;;IA1H+BhB;;ECLlC;;;;;;;;AAQA,EAAO,SAAS0C,aAAT,GAAyB;EAC9B,MAAMzC,WAAW0C,MAAMC,IAAN,CAAWvE,SAASwE,gBAAT,OAA8B1E,SAASX,SAAT,CAAmBC,OAAjD,OAAX,CAAjB;;EAEA,MAAMqF,kBAAkB,EAAxB;EACA,MAAMC,iBAAiB,EAAvB;EACA,MAAMC,WAAW,EAAjB;;EAEA/C,WAASS,OAAT,CAAiB,UAACE,IAAD,EAAU;EACzB,QAAMqC,UAAUrC,KAAKP,YAAL,CAAkBlC,SAASX,SAAT,CAAmBE,KAArC,CAAhB;EACA,QAAIuF,OAAJ,EAAa;EACX,UAAI,CAACD,SAASxC,QAAT,CAAkByC,OAAlB,CAAL,EAAiC;EAC/B,YAAMC,QAAQjD,SAASkD,MAAT,CAAgB;EAAA,iBAAMC,GAAG/C,YAAH,CAAgBlC,SAASX,SAAT,CAAmBE,KAAnC,MAA8CuF,OAApD;EAAA,SAAhB,CAAd;EACA,YAAMI,aAAaH,MAAMI,IAAN,CAAW;EAAA,iBAAMF,GAAGG,YAAH,CAAgBpF,SAASX,SAAT,CAAmBG,QAAnC,CAAN;EAAA,SAAX,CAAnB;EACAoF,uBAAeS,IAAf,CAAoBH,aAClB,IAAIxC,mBAAJ,CAAwBqC,KAAxB,CADkB,GAElB,IAAIlD,eAAJ,CAAoBkD,KAApB,CAFF;EAGAF,iBAASQ,IAAT,CAAcP,OAAd;EACD;EACF,KATD,MASO;EACLH,sBAAgBU,IAAhB,CAAqB,IAAI1F,cAAJ,CAAmB8C,KAAKP,YAAL,CAAkBlC,SAASX,SAAT,CAAmBC,OAArC,CAAnB,CAArB;EACD;EACF,GAdD;;EAgBA,SAAOqF,gBAAgBW,MAAhB,CAAuBV,cAAvB,CAAP;EACD;;;;;;;;;;;;;;;;"}