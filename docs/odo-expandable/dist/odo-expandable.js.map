{"version":3,"file":"odo-expandable.js","sources":["../src/settings.js","../src/expandable-item.js","../src/expandable-group.js","../src/expandable-accordion.js","../src/expandable.js"],"sourcesContent":["export default {\n  ClassName: {\n    TRIGGER_OPEN: 'odo-expandable__trigger--open',\n    TARGET_OPEN: 'odo-expandable__target--open',\n  },\n  Attribute: {\n    TRIGGER: 'data-expandable-trigger',\n    TARGET: 'data-expandable-target',\n    GROUP: 'data-expandable-group',\n    ANIMATED: 'data-expandable-animated',\n  },\n  Defaults: {\n    groupedItem: false,\n  },\n};\n","/**\n * @fileoverview An basic, expandable component that has both a trigger\n * and a target to open.\n *\n * @author Matt Zaso <matt.zaso@odopod.com>\n */\nimport Settings from './settings';\n\nclass ExpandableItem {\n  constructor(id, options = {}) {\n    /** @type {string} */\n    this.id = id;\n\n    /**\n     * Override any defaults with the given options.\n     * @type {Object}\n     */\n    this.options = Object.assign({}, Settings.Defaults, options);\n\n    /** @type {Element} */\n    this.trigger = document.body.querySelector(`[${Settings.Attribute.TRIGGER}=\"${id}\"]`);\n\n    /** @type {Element} */\n    this.target = document.body.querySelector(`[${Settings.Attribute.TARGET}=\"${id}\"]`);\n\n    this._setA11yAttributes();\n\n    if (!this.options.groupedItem) {\n      this._onTriggerClick = this._triggerClickHandler.bind(this);\n      document.body.addEventListener('click', this._onTriggerClick);\n    }\n  }\n\n  /**\n   * Handler for clicks on the trigger.\n   * @param {Event} evt Event object.\n   * @private\n   */\n  _triggerClickHandler(evt) {\n    evt.preventDefault();\n    const closest = evt.target.closest(`[${Settings.Attribute.TRIGGER}]`);\n\n    if (closest === this.trigger) {\n      this.toggle();\n    }\n  }\n\n  /**\n   * Sets the appropriate ARIA attributes for a11y.\n   * @private\n   */\n  _setA11yAttributes() {\n    const elementId = `expandable-${this.id}`;\n\n    this.trigger.setAttribute('aria-describedby', elementId);\n    this.target.setAttribute('id', elementId);\n    this.trigger.setAttribute('aria-expanded', this.isOpen.toString());\n    this.trigger.setAttribute('aria-controls', elementId);\n    this.target.setAttribute('aria-labelledby', elementId);\n    this.target.setAttribute('aria-hidden', (!this.isOpen).toString());\n  }\n\n  /**\n   * Removes the ARIA attributes assigned on instantiation.\n   * @private\n   */\n  _removeA11yAttributes() {\n    this.trigger.removeAttribute('aria-describedby');\n    this.target.removeAttribute('id');\n    this.trigger.removeAttribute('aria-expanded');\n    this.target.removeAttribute('aria-labelledby');\n    this.target.removeAttribute('aria-hidden');\n  }\n\n  /**\n   * Toggles the expandable's state (open/closed).\n   */\n  toggle() {\n    if (this.isOpen) {\n      this.close();\n    } else {\n      this.open();\n    }\n  }\n\n  /**\n   * Opens the expandable.\n   */\n  open() {\n    this.target.classList.add(Settings.ClassName.TARGET_OPEN);\n    this.trigger.classList.add(Settings.ClassName.TRIGGER_OPEN);\n    this.trigger.setAttribute('aria-expanded', 'true');\n    this.target.setAttribute('aria-hidden', 'false');\n  }\n\n  /**\n   * Closes the expandable.\n   */\n  close() {\n    this.target.classList.remove(Settings.ClassName.TARGET_OPEN);\n    this.trigger.classList.remove(Settings.ClassName.TRIGGER_OPEN);\n    this.trigger.setAttribute('aria-expanded', 'false');\n    this.target.setAttribute('aria-hidden', 'true');\n  }\n\n  get isOpen() {\n    return this.target.classList.contains(Settings.ClassName.TARGET_OPEN);\n  }\n\n  /**\n   * Dispose this instance and its handlers.\n   */\n  dispose() {\n    if (!this.options.groupedItem) {\n      document.body.removeEventListener('click', this._onTriggerClick);\n    }\n\n    this._removeA11yAttributes();\n  }\n}\n\nObject.assign(ExpandableItem, Settings);\n\nexport default ExpandableItem;\n","/**\n * @fileoverview A wrapper for multiple Expandable elements that will\n * allow them to operate coherently in an accordion type fashion.\n *\n * @author Matt Zaso <matt.zaso@odopod.com>\n */\nimport Settings from './settings';\nimport ExpandableItem from './expandable-item';\n\nclass ExpandableGroup {\n  constructor(elements) {\n    /** @type {Array.<!Element>} */\n    this._elements = elements;\n\n    /**\n     * @type {Array.<!ExpandableItem>}\n     * @protected\n     */\n    this.expandables = elements.map(trigger => new ExpandableItem(\n      trigger.getAttribute(Settings.Attribute.TRIGGER),\n      { groupedItem: true },\n    ));\n\n    this._onClick = this._onClickHandler.bind(this);\n    document.body.addEventListener('click', this._onClick);\n  }\n\n  /**\n   * Handler for clicks on the trigger.\n   * @param {MouseEvent} evt Event object.\n   * @private\n   */\n  _onClickHandler(evt) {\n    evt.preventDefault();\n    const closest = evt.target.closest(`[${Settings.Attribute.TRIGGER}]`);\n\n    if (this._elements.includes(closest)) {\n      this.toggleVisibility(closest.getAttribute(Settings.Attribute.TRIGGER));\n    }\n  }\n\n  /**\n   * Will iterate over all grouped items and toggle the selected one while collapsing all others.\n   * @param {string} selectedId The ID of the selected target to expand.\n   * @private\n   */\n  toggleVisibility(selectedId) {\n    this.expandables.forEach((expandable) => {\n      if (expandable.id === selectedId) {\n        expandable.toggle();\n      } else {\n        expandable.close();\n      }\n    });\n  }\n\n  /**\n   * Dispose this instance and its handlers. Will also dispose all child\n   * instances.\n   * @public\n   */\n  dispose() {\n    document.body.removeEventListener('click', this._onClick);\n    this.expandables.forEach(item => item.dispose());\n  }\n}\n\nObject.assign(ExpandableGroup, Settings);\n\nexport default ExpandableGroup;\n","/**\n * @fileoverview A subclass of ExpandableGroup which includes some additional\n * features like scrolling and collapsing animations.\n *\n * @author Matt Zaso <matt.zaso@odopod.com>\n */\nimport { scrollTo } from '@odopod/odo-helpers';\nimport OdoWindowEvents from '@odopod/odo-window-events';\nimport ExpandableGroup from './expandable-group';\n\nclass ExpandableAccordion extends ExpandableGroup {\n  constructor(elements) {\n    super(elements);\n\n    /**\n     * @type {Array.<{id: string, offset: number}>} Object A map of the expandable offsets.\n     */\n    this._expandableOffsets = null;\n\n    this._saveOffsets();\n\n    // Set the initial value of each element based on its state.\n    this.expandables.forEach(item => this._setHeight(item, item.isOpen));\n\n    // A resize handler for when the DOM updates.\n    this._resizeId = OdoWindowEvents.onResize(this._handleResize.bind(this));\n  }\n\n  /**\n   * Called by OdoWindowEvents when the browser is resized. Allows us to update\n   * our saved offsets and animate to their new positions.\n   *\n   * @private\n   */\n  _handleResize() {\n    this._saveOffsets();\n    this.expandables.forEach(item => this._setHeight(item, item.isOpen));\n  }\n\n  /**\n   * When an item is clicked, we animate the accordion.\n   *\n   * @override\n   */\n  toggleVisibility(selectedId) {\n    this._scrollToSelected(selectedId);\n    this.expandables.forEach(item => this._animateHeight(item, item.id === selectedId));\n    super.toggleVisibility(selectedId);\n  }\n\n  /**\n   * On load and any other time the DOM updates, this function will save the offsets\n   * of each accordion item into an object so we don't have to read the DOM every time.\n   *\n   * @private\n   */\n  _saveOffsets() {\n    const scrollY = window.pageYOffset;\n    const containerOffset = scrollY + this.expandables[0].trigger.getBoundingClientRect().top;\n    this._expandableOffsets = this.expandables.map((el, i) => {\n      const offset = containerOffset + (i * el.target.firstElementChild.offsetHeight);\n      return { id: el.id, offset };\n    });\n  }\n\n  /**\n   * When called we will check the accordion's position in the viewport and scroll\n   * the user into view if needed.\n   *\n   * @param {string} targetId The id of the ExpandableItem that was clicked.\n   * @private\n   */\n  _scrollToSelected(targetId) {\n    const viewportTop = window.pageYOffset;\n    const viewportBottom = viewportTop + window.innerHeight;\n    const item = this._expandableOffsets.find(item => item.id === targetId);\n    const itemOffset = item.offset;\n    const isOutOfView = itemOffset < viewportTop || itemOffset > viewportBottom;\n    if (isOutOfView) {\n      scrollTo(itemOffset, 300);\n    }\n  }\n\n  /**\n   * Sets the height of a given Expandable item.\n   *\n   * @param {Expandable} expandable The Expandable instance to modify.\n   * @param {boolean} setToOpen Whether we setting the Expandable to it's open state.\n   */\n  _setHeight(expandable, setToOpen) {\n    const contentHeight = setToOpen ? expandable.target.firstElementChild.offsetHeight : 0;\n    expandable.target.style.height = `${contentHeight}px`;\n  }\n\n  /**\n   * Called if we need to alter the Expandable state. Only does so if either the same\n   * Expandable that is open is clicked or another one was clicked and this one needs\n   * to be closed.\n   *\n   * @param {Expandable} expandable The expandable to test and potentially alter.\n   * @param {boolean} isTarget Whether or not the current expandable was the one clicked.\n   */\n  _animateHeight(expandable, isTarget) {\n    if (isTarget || expandable.isOpen) {\n      this._setHeight(expandable, !expandable.isOpen);\n    }\n  }\n\n  /**\n   * Remove the resize handler and dispose.\n   *\n   * @override\n   */\n  dispose() {\n    super.dispose();\n    OdoWindowEvents.remove(this._resizeId);\n  }\n}\n\nexport default ExpandableAccordion;\n","import Settings from './settings';\nimport ExpandableGroup from './expandable-group';\nimport ExpandableItem from './expandable-item';\nimport ExpandableAccordion from './expandable-accordion';\n\n/**\n * Instantiates all instances of the expandable. Groups are instantiated separate from\n * Expandables and require different parameters. This helper chunks out and groups the\n * grouped expandables before instantiating all of them.\n *\n * @return {Array.<ExpandableItem|ExpandableGroup|ExpandableAccordion>} all instances of both types.\n * @public\n */\nexport function initializeAll() {\n  const elements = Array.from(document.querySelectorAll(`[${Settings.Attribute.TRIGGER}]`));\n\n  const singleInstances = [];\n  const groupInstances = [];\n  const groupIds = [];\n\n  elements.forEach((item) => {\n    const groupId = item.getAttribute(Settings.Attribute.GROUP);\n    if (groupId) {\n      if (!groupIds.includes(groupId)) {\n        const group = elements.filter(el => el.getAttribute(Settings.Attribute.GROUP) === groupId);\n        const isAnimated = group.some(el => el.hasAttribute(Settings.Attribute.ANIMATED));\n        groupInstances.push(isAnimated ?\n          new ExpandableAccordion(group) :\n          new ExpandableGroup(group));\n        groupIds.push(groupId);\n      }\n    } else {\n      singleInstances.push(new ExpandableItem(item.getAttribute(Settings.Attribute.TRIGGER)));\n    }\n  });\n\n  return singleInstances.concat(groupInstances);\n}\n\nexport { default as Settings } from './settings';\nexport { default as ExpandableItem } from './expandable-item';\nexport { default as ExpandableGroup } from './expandable-group';\nexport { default as ExpandableAccordion } from './expandable-accordion';\n"],"names":["ClassName","TRIGGER_OPEN","TARGET_OPEN","Attribute","TRIGGER","TARGET","GROUP","ANIMATED","Defaults","groupedItem","ExpandableItem","id","options","Object","assign","Settings","trigger","document","body","querySelector","target","_setA11yAttributes","_onTriggerClick","_triggerClickHandler","bind","addEventListener","evt","preventDefault","closest","toggle","elementId","setAttribute","isOpen","toString","_removeA11yAttributes","removeAttribute","close","open","classList","add","remove","dispose","removeEventListener","contains","ExpandableGroup","elements","_elements","expandables","map","getAttribute","_onClick","_onClickHandler","includes","toggleVisibility","selectedId","forEach","expandable","item","ExpandableAccordion","_expandableOffsets","_saveOffsets","_setHeight","_resizeId","OdoWindowEvents","onResize","_handleResize","_scrollToSelected","_animateHeight","scrollY","window","pageYOffset","containerOffset","getBoundingClientRect","top","el","i","offset","firstElementChild","offsetHeight","targetId","viewportTop","viewportBottom","innerHeight","find","itemOffset","isOutOfView","scrollTo","setToOpen","contentHeight","style","height","isTarget","initializeAll","Array","from","querySelectorAll","singleInstances","groupInstances","groupIds","groupId","group","filter","isAnimated","some","hasAttribute","push","concat"],"mappings":"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"}