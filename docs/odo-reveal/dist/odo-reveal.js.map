{"version":3,"file":"odo-reveal.js","sources":["../src/reveal.js"],"sourcesContent":["/**\n * @fileoverview Fade elements in and up when they come into view. Waits for\n * images inside the main element to load before triggering the fade.\n *\n * @author Glen Cheney <glen@odopod.com>\n *\n * TODO: Add a (better) way to ignore/add/remove images or videos.\n */\n\nimport OdoDevice from '@odopod/odo-device';\nimport OdoViewport from '@odopod/odo-viewport';\nimport { getPercentageOption, isNativeAndroid, onTransitionEnd } from '@odopod/odo-helpers';\n\nclass Reveal {\n  /**\n   * @param {Element} element Main element for the module.\n   * @constructor\n   */\n  constructor(element) {\n    this.element = element;\n    this.images = this._getDependentImages();\n    this._numImages = this.images.length;\n    this._loadedImages = 0;\n    this._imageCompleteHandler = this._imageComplete.bind(this);\n    this._ready = new Promise((resolve) => {\n      this._resolve = resolve;\n    });\n\n    if (this._numImages > 0) {\n      this.images.forEach((image) => {\n        image.addEventListener('load', this._imageCompleteHandler);\n        image.addEventListener('error', this._imageCompleteHandler);\n      });\n    } else {\n      this._resolve();\n    }\n\n    // To avoid blank text while scrolling on native Android,\n    // the type is faded in immediately and not given to the viewport\n    // to track.\n    if (Reveal.HAS_SCROLL_ANIMATION) {\n      /**\n       * Viewport id to remove it later.\n       * @type {string}\n       */\n      this.id = OdoViewport.add({\n        element,\n        threshold: getPercentageOption(element.getAttribute('data-threshold'), '25%'),\n        enter: this._enteredView.bind(this),\n      });\n    } else {\n      this._show();\n    }\n  }\n\n  /**\n   * Get all images within the main element which do not have the \"ignore\" class\n   * on a parent element.\n   * @return {Array.<HTMLImageElement>}\n   * @private\n   */\n  _getDependentImages() {\n    const images = Array.from(this.element.querySelectorAll('img'));\n    return images.filter(img => img.closest('.' + Reveal.ClassName.IGNORE) === null);\n  }\n\n  /**\n   * Element is in view. Wait until all images have finished loading then animate\n   * the targets in.\n   */\n  _enteredView() {\n    this._ready.then(this._show.bind(this));\n  }\n\n  /**\n   * Main element came into view. Add the fade in class to the main element which\n   * triggers all type to start transitioning.\n   * @private\n   */\n  _show() {\n    this.element.classList.add(Reveal.ClassName.IN);\n\n    const targetSelector = '.' + Reveal.ClassName.TARGET;\n    const targets = Array.from(this.element.querySelectorAll(targetSelector));\n\n    // Listen transition end on each target and add a class which removes\n    // the transform and layer promotion from it.\n    targets.forEach((el) => {\n      onTransitionEnd(el, this._handleShown, null, OdoDevice.Dom.TRANSFORM);\n    });\n\n    this.dispose();\n  }\n\n  /**\n   * Add the done class which removes the transforms and layer promotion.\n   * @private\n   */\n  _handleShown(evt) {\n    evt.target.classList.add(Reveal.ClassName.DONE);\n  }\n\n  /**\n   * An image loaded or failed to load. If it was the last image, resolve the\n   * promise waiting for all images to finish.\n   * @private\n   */\n  _imageComplete() {\n    this._loadedImages += 1;\n\n    if (this._loadedImages === this._numImages) {\n      this._resolve();\n    }\n  }\n\n  /**\n   * Remove the type animations from the viewport watcher. Has no effect if the\n   * element has already come into view.\n   */\n  dispose() {\n    OdoViewport.remove(this.id);\n\n    this.images.forEach((image) => {\n      image.removeEventListener('load', this._imageCompleteHandler);\n      image.removeEventListener('error', this._imageCompleteHandler);\n    });\n\n    this.images = null;\n    this.element = null;\n  }\n\n  /**\n   * Auto-initialize all odo reveal elements currently on the page.\n   * @param {Element|Document} [context] Optional context to initialize elements within.\n   * @return {Array.<Reveal>}\n   */\n  static initializeAll(context = document) {\n    return Array.from(\n      context.querySelectorAll('.odo-reveal'),\n      element => new Reveal(element),\n    );\n  }\n}\n\n/**\n * Whether or not to add the main element to the Viewport watcher. By default,\n * no native Android browsers are registered. The type will fade in immediately.\n * @type {boolean}\n */\nReveal.HAS_SCROLL_ANIMATION = !isNativeAndroid(navigator.userAgent);\n\n/** @enum {string} */\nReveal.ClassName = {\n  TARGET: 'odo-reveal__target',\n  IN: 'odo-reveal--shown',\n  DONE: 'odo-reveal--done',\n  IGNORE: 'odo-reveal__ignore',\n};\n\nexport default Reveal;\n"],"names":["Reveal","element","images","_getDependentImages","_numImages","length","_loadedImages","_imageCompleteHandler","_imageComplete","bind","_ready","Promise","resolve","_resolve","forEach","image","addEventListener","HAS_SCROLL_ANIMATION","id","OdoViewport","add","threshold","getPercentageOption","getAttribute","enter","_enteredView","_show","Array","from","querySelectorAll","filter","img","closest","ClassName","IGNORE","then","classList","IN","targetSelector","TARGET","targets","el","onTransitionEnd","_handleShown","OdoDevice","Dom","TRANSFORM","dispose","evt","target","DONE","remove","removeEventListener","initializeAll","context","document","isNativeAndroid","navigator","userAgent"],"mappings":"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"}