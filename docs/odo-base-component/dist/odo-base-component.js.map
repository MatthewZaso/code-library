{"version":3,"file":"odo-base-component.js","sources":["../node_modules/debounce/index.js","../src/base-component.js"],"sourcesContent":["/**\n * Returns a function, that, as long as it continues to be invoked, will not\n * be triggered. The function will be called after it stops being called for\n * N milliseconds. If `immediate` is passed, trigger the function on the\n * leading edge, instead of the trailing. The function also has a property 'clear' \n * that is a function which will clear the timer to prevent previously scheduled executions. \n *\n * @source underscore.js\n * @see http://unscriptable.com/2009/03/20/debouncing-javascript-methods/\n * @param {Function} function to wrap\n * @param {Number} timeout in ms (`100`)\n * @param {Boolean} whether to execute at the beginning (`false`)\n * @api public\n */\n\nmodule.exports = function debounce(func, wait, immediate){\n  var timeout, args, context, timestamp, result;\n  if (null == wait) wait = 100;\n\n  function later() {\n    var last = Date.now() - timestamp;\n\n    if (last < wait && last >= 0) {\n      timeout = setTimeout(later, wait - last);\n    } else {\n      timeout = null;\n      if (!immediate) {\n        result = func.apply(context, args);\n        context = args = null;\n      }\n    }\n  };\n\n  var debounced = function(){\n    context = this;\n    args = arguments;\n    timestamp = Date.now();\n    var callNow = immediate && !timeout;\n    if (!timeout) timeout = setTimeout(later, wait);\n    if (callNow) {\n      result = func.apply(context, args);\n      context = args = null;\n    }\n\n    return result;\n  };\n\n  debounced.clear = function() {\n    if (timeout) {\n      clearTimeout(timeout);\n      timeout = null;\n    }\n  };\n  \n  debounced.flush = function() {\n    if (timeout) {\n      result = func.apply(context, args);\n      context = args = null;\n      \n      clearTimeout(timeout);\n      timeout = null;\n    }\n  };\n\n  return debounced;\n};\n","import debounce from 'debounce';\nimport TinyEmitter from 'tiny-emitter';\n\n/**\n * A class to be inherited from for components which interact with the DOM.\n * @extends {TinyEmitter}\n */\nclass BaseComponent extends TinyEmitter {\n  /**\n   * Create a new base component.\n   * @param {Element} element Main element which represents this class.\n   * @param {boolean} [addMediaListeners=false] Whether or not to add media\n   *     query listeners to allow this component to react to media changes.\n   * @throws {TypeError} Throws when the element is not defined.\n   */\n  constructor(element, addMediaListeners = false) {\n    super();\n\n    if (!element) {\n      throw new TypeError(`${this.constructor.name}'s \"element\" in the constructor must be element. Got: \"${element}\".`);\n    }\n\n    /**\n     * Main element for this class.\n     * @type {Element}\n     */\n    this.element = element;\n\n    if (addMediaListeners && BaseComponent.hasMediaQueries) {\n      this._registerMediaQueryListeners();\n    }\n  }\n\n  /**\n   * Determine the context for queries to the DOM.\n   * @param {Element} [context=this.element] Optional element to search within.\n   * @return {!Element}\n   * @private\n   */\n  _getContext(context = this.element) {\n    return context;\n  }\n\n  /**\n   * Retrieve an element by class name within the main element for this class.\n   * @param {string} klass Name of the class to search for.\n   * @param {Element} [context] Element to search within. Defaults to main element.\n   * @return {?Element} The first element which matches the class name, or null.\n   */\n  getElementByClass(klass, context) {\n    return this._getContext(context).getElementsByClassName(klass)[0] || null;\n  }\n\n  /**\n   * Retrieve elements by class name within the main element for this class.\n   * @param {string} klass Name of the class to search for.\n   * @param {Element} [context] Element to search within. Defaults to main element.\n   * @return {Element[]} An array of elements matching the class name.\n   */\n  getElementsByClass(klass, context) {\n    return Array.from(this._getContext(context).getElementsByClassName(klass));\n  }\n\n  /**\n   * Retrieve elements by selector within the main element for this class.\n   * @param {string} selector Selector to search for.\n   * @param {Element} [context] Element to search within. Defaults to main element.\n   * @return {Element[]} An array of elements matching the selector.\n   */\n  getElementsBySelector(selector, context) {\n    return Array.from(this._getContext(context).querySelectorAll(selector));\n  }\n\n  /**\n   * Alias for the static getter `breakpoint`.\n   * @return {Object}\n   */\n  get breakpoint() {\n    return BaseComponent.breakpoint;\n  }\n\n  /**\n   * Override this method to respond to media query changes.\n   */\n  onMediaQueryChange() {}\n\n  /**\n   * Clean up element references and event listeners.\n   */\n  dispose() {\n    this.element = null;\n\n    if (this._onMediaChange) {\n      Object.keys(BaseComponent.queries).forEach((k) => {\n        BaseComponent.queries[k].removeListener(this._onMediaChange);\n      });\n\n      this._onMediaChange = null;\n    }\n  }\n\n  _registerMediaQueryListeners() {\n    this._onMediaChange = debounce(this.onMediaQueryChange.bind(this), 50);\n    Object.keys(BaseComponent.queries).forEach((k) => {\n      BaseComponent.queries[k].addListener(this._onMediaChange);\n    });\n  }\n\n  /**\n   * Returns an object with `matches` and `current`. This is an alias for\n   * `BaseComponent.matches` and `BaseComponent.getCurrentBreakpoint()`.\n   * @return {!Object}\n   * @static\n   */\n  static get breakpoint() {\n    return {\n      matches: BaseComponent.matches,\n      get current() {\n        return BaseComponent.getCurrentBreakpoint();\n      },\n    };\n  }\n\n  /**\n   * Query the media query list to see if it currently matches.\n   * @param {string} key Breakpoint key to see if it matches.\n   * @return {boolean} Whether the given key is the current breakpoint.\n   * @throws {Error} Will throw an error if the key is not recognized.\n   * @static\n   */\n  static matches(key) {\n    if (BaseComponent.queries[key]) {\n      return BaseComponent.queries[key].matches;\n    }\n\n    throw new Error(`Unrecognized breakpoint key: \"${key}\"`);\n  }\n\n  /**\n   * Loop through the 4 media query lists to determine which one currently\n   * matches. Returns the key which matches or `null` if none match.\n   * @return {?string}\n   * @static\n   */\n  static getCurrentBreakpoint() {\n    const key = Object.keys(BaseComponent.queries)\n      .find(k => BaseComponent.queries[k].matches);\n\n    return key || null;\n  }\n\n  /**\n   * Create a new media queries object with keys for each breakpoint.\n   * @param {number[]} bps Array of breakpoints.\n   * @return {!Object}\n   * @private\n   * @static\n   */\n  static _getQueries(bps) {\n    return {\n      xs: matchMedia(`(max-width:${bps[0] - 1}px)`),\n      sm: matchMedia(`(min-width:${bps[0]}px) and (max-width:${bps[1] - 1}px)`),\n      md: matchMedia(`(min-width:${bps[1]}px) and (max-width:${bps[2] - 1}px)`),\n      lg: matchMedia(`(min-width:${bps[2]}px)`),\n    };\n  }\n\n  /**\n   * Allows you to redefine the default breakpoints. If you want to redefine\n   * breakpoints, make sure you call this method before initializing classes\n   * which inherit from BaseComponent.\n   * @param {number[]} breakpoints An array of 3 numbers.\n   * @static\n   */\n  static defineBreakpoints(breakpoints) {\n    BaseComponent.BREAKPOINTS = breakpoints;\n    BaseComponent.queries = BaseComponent._getQueries(breakpoints);\n  }\n}\n\n// Define breakpoints commonly used on Odopod projects.\nBaseComponent.defineBreakpoints([768, 1024, 1392]);\n\n/**\n * Array of breakpoint key names.\n * @type {string[]}\n */\nBaseComponent.BREAKPOINT_NAMES = Object.keys(BaseComponent.queries);\n\n/**\n * Support: IE9\n * Whether the browser has `addListener` on `MediaQueryList` instances.\n * @type {boolean}\n */\nBaseComponent.hasMediaQueries = typeof BaseComponent.queries.xs.addListener === 'function';\n\nexport default BaseComponent;\n"],"names":["debounce","func","wait","immediate","timeout","args","context","timestamp","result","later","last","Date","now","setTimeout","apply","debounced","arguments","callNow","clear","clearTimeout","flush","BaseComponent","element","addMediaListeners","TypeError","constructor","name","hasMediaQueries","_registerMediaQueryListeners","_getContext","getElementByClass","klass","getElementsByClassName","getElementsByClass","Array","from","getElementsBySelector","selector","querySelectorAll","onMediaQueryChange","dispose","_onMediaChange","Object","keys","queries","forEach","k","removeListener","bind","addListener","matches","key","Error","getCurrentBreakpoint","find","_getQueries","bps","xs","matchMedia","sm","md","lg","defineBreakpoints","breakpoints","BREAKPOINTS","breakpoint","current","TinyEmitter","BREAKPOINT_NAMES"],"mappings":"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"}