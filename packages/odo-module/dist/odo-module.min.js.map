{"version":3,"file":"odo-module.min.js","sources":["../src/module-utils.js","../src/module.js","../src/module-methods.js"],"sourcesContent":["/**\n * Utilities for the Odo Module component.\n *\n * @author Nathan Buchar <nathan@odopod.com>\n */\n\n/**\n * If the first parameter is not an array, return an array containing the\n * first parameter.\n *\n * @author Glen Cheney <glen@odopod.com>\n * @param {*} thing - Anything.\n * @returns {Array.<*>} Array of things.\n */\nexport function arrayify(thing) {\n  if (Array.isArray(thing)) {\n    return thing;\n  }\n\n  if (thing && typeof thing.length === 'number') {\n    return Array.from(thing);\n  }\n\n  return [thing];\n}\n\n/**\n * Determine if the given item is an HTMLElement. Adapted from\n * {@link http://stackoverflow.com/a/36894871/373422}\n *\n * @param {*} thing - Anything.\n * @returns {boolean}\n */\nexport function isHTMLElement(thing) {\n  return thing instanceof Element;\n}\n","/**\n * Entry point into the Odo Module component. Exposes a single `register`\n * static property, which when called will register the given base selector\n * with the given module class and apply several static methods and properties.\n *\n * @author Nathan Buchar <nathan@odopod.com>\n */\n\nimport OdoModuleMethods from './module-methods';\n\n/**\n * A map of all registered modules, keyed by the base selector. No two\n * registers may share the same base selector.\n * @type {Map}\n * @private\n */\nconst store = new Map();\n\n/**\n * Determine the base selector for this module.\n * @param {Object} Module\n * @param {string} [selector]\n * @return {string} Updated selector string.\n * @throws {TypeError} If the selector cannot be determined.\n */\nfunction getSelector(Module, selector) {\n  // Verify that a base selector is defined.\n  if (typeof selector === 'undefined') {\n    if (Module.Selectors && Module.Selectors.BASE) {\n      return Module.Selectors.BASE;\n    }\n\n    // Support both `ClassName` and `Classes` enumerations.\n    const classes = Module.ClassName || Module.Classes;\n    if (classes && classes.BASE) {\n      return '.' + classes.BASE;\n    }\n\n    throw new TypeError('A base selector for this module must be specified.');\n  }\n\n  return selector;\n}\n\n/**\n * Ensure all required properties exist.\n * @param {Object} Module\n * @param {string} [selector]\n * @throws {TypeError} When something is missing.\n * @private\n */\nfunction validate(Module, selector) {\n  // Verify that the Module is an Object or Class.\n  const type = Object.prototype.toString.call(Module);\n  const isObject = type === '[object Object]';\n  const isFunction = type === '[object Function]';\n  if (!(isObject || isFunction)) {\n    throw new TypeError(`Module must be an Function (class) or Object. Got \"${Object.prototype.toString.call(Module)}\".`);\n  }\n\n  // Verify that the module has not yet been registered.\n  if (store.has(selector)) {\n    throw new TypeError('The base selector for this module has already been registered. Please use a unique base selector.');\n  }\n}\n\n/**\n * Adds static methods and internally registers the module.\n * @param {Object} Module\n * @param {string} [selector]\n * @return {Object} The module.\n */\nfunction register(Module, selector) {\n  const _selector = getSelector(Module, selector);\n\n  validate(Module, _selector);\n\n  const methods = OdoModuleMethods(Module, _selector);\n\n  // Apply OdoModule static methods.\n  Object.keys(methods).forEach((method) => {\n    Module[method] = methods[method];\n  });\n\n  // Apply the OdoModule static property.\n  Module.Instances = new Map();\n\n  // Internally register the module.\n  store.set(_selector, Module);\n\n  return Module;\n}\n\n/**\n * Forget about this module. Currently leaves methods and instances as-is in\n * case they're needed.\n * @param {Object} Module\n * @param {string} [selector]\n */\nfunction unregister(Module, selector) {\n  const _selector = getSelector(Module, selector);\n\n  // Internally unregister the module.\n  store.delete(_selector, Module);\n}\n\nexport default { register, unregister };\n","/**\n * Any method defined here will be automatically applied to all OdoModules.\n *\n * @author Nathan Buchar <nathan@odopod.com>\n */\n\nimport { arrayify, isHTMLElement } from './module-utils';\n\nexport default (Module, selector) => ({\n  /**\n   * Gets the Module instance for a given element, if it has been created.\n   * Returns undefined if no instance was found for this element.\n   *\n   * @param {HTMLElement} element\n   * @returns {?Module}\n   */\n  getInstance(element) {\n    return Module.Instances.get(element);\n  },\n\n  /**\n   * Removes a given module instance from the Instances Map and calls the\n   * \"dispose\" method on the instance, if it is implemented. Returns true if\n   * the module instance was removed, or false if no module instance\n   * exists for the given element\n   *\n   * @param {HTMLElement} element\n   * @returns {boolean}\n   */\n  deleteInstance(element) {\n    const instance = Module.getInstance(element);\n\n    if (instance) {\n      Module.Instances.delete(element);\n\n      // Call the \"dispose\" method if it is implemented by the module.\n      if (typeof instance.dispose === 'function') {\n        instance.dispose();\n      }\n\n      return true;\n    }\n\n    return false;\n  },\n\n  /**\n   * Initalize Components from an element, or an array or NodeList of\n   * elements. Returns a Map of all instances created, keyed by their\n   * respective base elements.\n   *\n   * @param {arrayLike<HTLMElement>|HTMLElement} elements\n   * @param {Object} [options={}]\n   * @returns {Map} instances\n   */\n  initialize(elements, options = {}) {\n    if (typeof elements === 'undefined') {\n      throw new TypeError('Element(s) to initialize must be defined.');\n    }\n\n    const instances = new Map();\n\n    arrayify(elements).forEach((element) => {\n      // Verify that the element is in fact an HTML Element.\n      if (!isHTMLElement(element)) {\n        throw new TypeError(`Expected HTML Element. Got \"${Object.prototype.toString.call(element)}\".`);\n      }\n\n      // Verify that an instance has not already been initialized for this element.\n      if (Module.Instances.has(element)) {\n        // eslint-disable-next-line no-console\n        console.warn('An instance has already been initialized for this element.');\n        return;\n      }\n\n      const instance = new Module(element, options);\n\n      instances.set(element, instance);\n      Module.Instances.set(element, instance);\n    });\n\n    return instances;\n  },\n\n  /**\n   * Initializes all Module within the given context.\n   * @param {Object} [context=document]\n   * @param {Object} [options={}]\n   * @returns {Map}\n   */\n  initializeAll(context = document, options = {}) {\n    return Module.initialize(context.querySelectorAll(selector), options);\n  },\n\n  /**\n   * Initializes all Module within the given context.\n   * @param {Object} [context=document]\n   */\n  disposeAll(context = document) {\n    arrayify(context.querySelectorAll(selector)).forEach((element) => {\n      Module.deleteInstance(element);\n    });\n  },\n});\n"],"names":["arrayify","thing","Array","isArray","length","from","getSelector","Module","selector","Selectors","BASE","classes","ClassName","Classes","TypeError","register","_selector","type","Object","prototype","toString","call","store","has","methods","OdoModuleMethods","keys","forEach","method","Instances","Map","set","element","get","instance","getInstance","delete","dispose","elements","options","instances","Element","isHTMLElement","context","document","initialize","querySelectorAll","deleteInstance","unregister"],"mappings":"qLAcA,SAAgBA,EAASC,UACnBC,MAAMC,QAAQF,GACTA,EAGLA,GAAiC,iBAAjBA,EAAMG,OACjBF,MAAMG,KAAKJ,IAGZA,GCEV,SAASK,EAAYC,EAAQC,WAEH,IAAbA,EAA0B,IAC/BD,EAAOE,WAAaF,EAAOE,UAAUC,YAChCH,EAAOE,UAAUC,SAIpBC,EAAUJ,EAAOK,WAAaL,EAAOM,WACvCF,GAAWA,EAAQD,WACd,IAAMC,EAAQD,WAGjB,IAAII,UAAU,6DAGfN,EA+BT,SAASO,EAASR,EAAQC,OAClBQ,EAAYV,EAAYC,EAAQC,IAtBxC,SAAkBD,EAAQC,OAElBS,EAAOC,OAAOC,UAAUC,SAASC,KAAKd,MAClB,oBAATU,GACW,sBAATA,QAEX,IAAIH,gEAAgEI,OAAOC,UAAUC,SAASC,KAAKd,YAIvGe,EAAMC,IAAIf,SACN,IAAIM,UAAU,sGAabP,EAAQS,OAEXQ,EAAUC,EAAiBlB,EAAQS,iBAGlCU,KAAKF,GAASG,QAAQ,SAACC,KACrBA,GAAUJ,EAAQI,OAIpBC,UAAY,IAAIC,MAGjBC,IAAIf,EAAWT,GAEdA,ECpFT,eAEgBA,EAAQC,+BAQVwB,UACHzB,EAAOsB,UAAUI,IAAID,4BAYfA,OACPE,EAAW3B,EAAO4B,YAAYH,WAEhCE,MACKL,UAAUO,OAAOJ,GAGQ,mBAArBE,EAASG,WACTA,WAGJ,wBAeAC,OAAUC,oEACK,IAAbD,QACH,IAAIxB,UAAU,iDAGhB0B,EAAY,IAAIV,aAEbQ,GAAUX,QAAQ,SAACK,OF7BhC,SAA8B/B,UACrBA,aAAiBwC,QE8BfC,CAAcV,SACX,IAAIlB,yCAAyCI,OAAOC,UAAUC,SAASC,KAAKW,aAIhFzB,EAAOsB,UAAUN,IAAIS,QAMnBE,EAAW,IAAI3B,EAAOyB,EAASO,KAE3BR,IAAIC,EAASE,KAChBL,UAAUE,IAAIC,EAASE,MAGzBM,gCASKG,yDAAUC,SAAUL,mEACzBhC,EAAOsC,WAAWF,EAAQG,iBAAiBtC,GAAW+B,oFAO1CK,UACFE,iBAAiBtC,IAAWmB,QAAQ,SAACK,KAC7Ce,eAAef,QDpFtBV,EAAQ,IAAIQ,WA0FDf,WAAUiC,WAP3B,SAAoBzC,EAAQC,OACpBQ,EAAYV,EAAYC,EAAQC,KAGhC4B,OAAOpB,EAAWT"}