{"version":3,"file":"odo-expandable.js","sources":["../src/settings.js","../src/expandable-item.js","../src/expandable-group.js","../src/expandable-accordion.js","../src/expandable.js"],"sourcesContent":["export default {\n  ClassName: {\n    TRIGGER_OPEN: 'odo-expandable__trigger--open',\n    TARGET_OPEN: 'odo-expandable__target--open',\n  },\n  Attribute: {\n    TRIGGER: 'data-expandable-trigger',\n    GROUP: 'data-expandable-group',\n    ANIMATED: 'data-expandable-animated',\n  },\n  Defaults: {\n    groupedItem: false,\n  },\n};\n","/**\n * @fileoverview An basic, expandable component that has both a trigger\n * and a target to open.\n *\n * @author Matt Zaso <matt.zaso@odopod.com>\n */\nimport Settings from './settings';\n\nclass ExpandableItem {\n  constructor(id, options = {}) {\n    /** @type {string} */\n    this.id = id;\n\n    /**\n     * Override any defaults with the given options.\n     * @type {Object}\n     */\n    this.options = Object.assign({}, Settings.Defaults, options);\n\n    /** @type {Element} */\n    this.trigger = document.body.querySelector(`[${Settings.Attribute.TRIGGER}=\"${id}\"]`);\n\n    /** @type {Element} */\n    this.target = document.getElementById(id);\n\n    /** @type {boolean} */\n    this.isOpen = this.target.classList.contains(Settings.ClassName.TARGET_OPEN);\n\n    if (!this.trigger.id) {\n      this.trigger.id = `odo-expandable-trigger--${this.id}`;\n    }\n\n    this._setA11yAttributes();\n\n    if (this.isOpen) {\n      this.open();\n    }\n\n    if (!this.options.groupedItem) {\n      this._onTriggerClick = this._triggerClickHandler.bind(this);\n      document.body.addEventListener('click', this._onTriggerClick);\n    }\n  }\n\n  /**\n   * Handler for clicks on the trigger.\n   * @param {Event} evt Event object.\n   * @private\n   */\n  _triggerClickHandler(evt) {\n    evt.preventDefault();\n    const closest = evt.target.closest(`[${Settings.Attribute.TRIGGER}]`);\n\n    if (closest === this.trigger) {\n      this.toggle();\n    }\n  }\n\n  /**\n   * Sets the appropriate ARIA attributes for a11y.\n   * @private\n   */\n  _setA11yAttributes() {\n    this.trigger.setAttribute('aria-expanded', this.isOpen.toString());\n    this.trigger.setAttribute('aria-controls', this.id);\n\n    this.target.setAttribute('aria-labelledby', this.trigger.id);\n    this.target.setAttribute('aria-hidden', (!this.isOpen).toString());\n  }\n\n  /**\n   * Removes the ARIA attributes assigned on instantiation.\n   * @private\n   */\n  _removeA11yAttributes() {\n    this.trigger.removeAttribute('aria-expanded');\n    this.trigger.removeAttribute('aria-controls');\n\n    this.target.removeAttribute('aria-labelledby');\n    this.target.removeAttribute('aria-hidden');\n  }\n\n  /**\n   * Toggles the expandable's state (open/closed).\n   */\n  toggle() {\n    if (this.isOpen) {\n      this.close();\n    } else {\n      this.open();\n    }\n  }\n\n  /**\n   * Opens the expandable.\n   */\n  open() {\n    this.target.classList.add(Settings.ClassName.TARGET_OPEN);\n    this.trigger.classList.add(Settings.ClassName.TRIGGER_OPEN);\n    this.trigger.setAttribute('aria-expanded', 'true');\n    this.target.setAttribute('aria-hidden', 'false');\n    this.isOpen = true;\n  }\n\n  /**\n   * Closes the expandable.\n   */\n  close() {\n    this.target.classList.remove(Settings.ClassName.TARGET_OPEN);\n    this.trigger.classList.remove(Settings.ClassName.TRIGGER_OPEN);\n    this.trigger.setAttribute('aria-expanded', 'false');\n    this.target.setAttribute('aria-hidden', 'true');\n    this.isOpen = false;\n  }\n\n  /**\n   * Dispose this instance and its handlers.\n   */\n  dispose() {\n    if (!this.options.groupedItem) {\n      document.body.removeEventListener('click', this._onTriggerClick);\n    }\n\n    this._removeA11yAttributes();\n  }\n}\n\nObject.assign(ExpandableItem, Settings);\n\nexport default ExpandableItem;\n","/**\n * @fileoverview A wrapper for multiple Expandable elements that will\n * allow them to operate coherently in an accordion type fashion.\n *\n * @author Matt Zaso <matt.zaso@odopod.com>\n */\nimport Settings from './settings';\nimport ExpandableItem from './expandable-item';\n\nclass ExpandableGroup {\n  constructor(elements) {\n    /** @type {Array.<!Element>} */\n    this._elements = elements;\n\n    /**\n     * @type {Array.<!ExpandableItem>}\n     * @protected\n     */\n    this.expandables = elements.map(trigger => new ExpandableItem(\n      trigger.getAttribute(Settings.Attribute.TRIGGER),\n      { groupedItem: true },\n    ));\n\n    this._onClick = this._onClickHandler.bind(this);\n    document.body.addEventListener('click', this._onClick);\n  }\n\n  /**\n   * Handler for clicks on the trigger.\n   * @param {MouseEvent} evt Event object.\n   * @private\n   */\n  _onClickHandler(evt) {\n    evt.preventDefault();\n    const closest = evt.target.closest(`[${Settings.Attribute.TRIGGER}]`);\n\n    if (this._elements.includes(closest)) {\n      this.toggleVisibility(closest.getAttribute(Settings.Attribute.TRIGGER));\n    }\n  }\n\n  /**\n   * Will iterate over all grouped items and toggle the selected one while collapsing all others.\n   * @param {string} id The ID of the selected target to expand.\n   * @private\n   */\n  toggleVisibility(id) {\n    this.expandables.forEach((expandable) => {\n      if (expandable.id === id) {\n        expandable.toggle();\n      } else {\n        expandable.close();\n      }\n    });\n  }\n\n  /**\n   * Dispose this instance and its handlers. Will also dispose all child\n   * instances.\n   * @public\n   */\n  dispose() {\n    document.body.removeEventListener('click', this._onClick);\n    this.expandables.forEach(item => item.dispose());\n  }\n}\n\nObject.assign(ExpandableGroup, Settings);\n\nexport default ExpandableGroup;\n","/**\n * @fileoverview A subclass of ExpandableGroup which includes some additional\n * features like scrolling and collapsing animations.\n *\n * @author Matt Zaso <matt.zaso@odopod.com>\n */\nimport { scrollTo } from '@odopod/odo-helpers';\nimport OdoWindowEvents from '@odopod/odo-window-events';\nimport ExpandableGroup from './expandable-group';\n\nclass ExpandableAccordion extends ExpandableGroup {\n  constructor(elements) {\n    super(elements);\n\n    /**\n     * @type {Array.<{id: string, offset: number}>} Object A map of the expandable offsets.\n     */\n    this._expandableOffsets = [];\n\n    // Set the initial value of each element based on its state.\n    this.update();\n\n    // A resize handler for when the DOM updates.\n    this._resizeId = OdoWindowEvents.onResize(this.update.bind(this));\n  }\n\n  /**\n   * Called by OdoWindowEvents when the browser is resized. Allows us to update\n   * our saved offsets and animate to their new positions.\n   * @private\n   */\n  update() {\n    // Find any already open expandables.\n    const openExpandables = this.expandables.map(expandable => expandable.isOpen);\n\n    // Set the transition duration to zero so there is no animation when measuring.\n    this.expandables.forEach((expandable) => {\n      expandable.target.style.transitionDuration = '0s';\n      expandable.close();\n      this._setHeight(expandable, false);\n    });\n\n    // Save offsets now that all expandables are collapsed.\n    this._expandableOffsets = this._getOffsets();\n\n    // Reopen any expandables that were open before.\n    this.expandables.forEach((expandable, i) => {\n      this._setHeight(expandable, openExpandables[i]);\n    });\n\n    // Cause the browser to do a layout and set the heights of the elements\n    // with a transition duration of zero.\n    this.expandables[0].trigger.offsetWidth; // eslint-disable-line no-unused-expressions\n\n    // Now that everything has been reset, enable transitions again.\n    this.expandables.forEach((expandable, i) => {\n      expandable.target.style.transitionDuration = '';\n      if (openExpandables[i]) {\n        expandable.open();\n      }\n    });\n  }\n\n  /**\n   * When an item is clicked, we animate the accordion.\n   * @override\n   */\n  toggleVisibility(id) {\n    this.expandables.forEach((expandable) => {\n      this._animateHeight(expandable, expandable.id === id);\n    });\n    super.toggleVisibility(id);\n    this._scrollToSelected(id);\n  }\n\n  /**\n   * On load and any other time the DOM updates, this function will save the offsets\n   * of each accordion item into an object so we don't have to read the DOM every time.\n   * @private\n   * @return {Array.<{id: string, offset: number}>}\n   */\n  _getOffsets() {\n    const scrollY = window.pageYOffset;\n    return this.expandables.map(expandable => ({\n      id: expandable.id,\n      offset: scrollY + expandable.trigger.getBoundingClientRect().top,\n    }));\n  }\n\n  /**\n   * When called we will check the accordion's position in the viewport and scroll\n   * the user into view if needed.\n   * @param {string} id The id of the ExpandableItem that was clicked.\n   * @private\n   */\n  _scrollToSelected(id) {\n    const item = this._expandableOffsets.find(item => item.id === id);\n    if (item.offset < window.pageYOffset) {\n      scrollTo(item.offset, 300);\n    }\n  }\n\n  /**\n   * Sets the height of a given Expandable item.\n   * @param {Expandable} expandable The Expandable instance to modify.\n   * @param {boolean} setToOpen Whether we setting the Expandable to it's open state.\n   */\n  _setHeight(expandable, setToOpen) {\n    const contentHeight = setToOpen ? expandable.target.firstElementChild.offsetHeight : 0;\n    expandable.target.style.height = `${contentHeight}px`;\n  }\n\n  /**\n   * Called if we need to alter the Expandable state. Only does so if either the same\n   * Expandable that is open is clicked or another one was clicked and this one needs\n   * to be closed.\n   * @param {Expandable} expandable The expandable to test and potentially alter.\n   * @param {boolean} isTarget Whether or not the current expandable was the one clicked.\n   */\n  _animateHeight(expandable, isTarget) {\n    if (isTarget || expandable.isOpen) {\n      this._setHeight(expandable, !expandable.isOpen);\n    }\n  }\n\n  /**\n   * Remove the resize handler and dispose.\n   * @override\n   */\n  dispose() {\n    super.dispose();\n    OdoWindowEvents.remove(this._resizeId);\n  }\n}\n\nexport default ExpandableAccordion;\n","import Settings from './settings';\nimport ExpandableGroup from './expandable-group';\nimport ExpandableItem from './expandable-item';\nimport ExpandableAccordion from './expandable-accordion';\n\n/**\n * Instantiates all instances of the expandable. Groups are instantiated separate from\n * Expandables and require different parameters. This helper chunks out and groups the\n * grouped expandables before instantiating all of them.\n *\n * @return {Array.<ExpandableItem|ExpandableGroup|ExpandableAccordion>} all instances of both types.\n * @public\n */\nexport function initializeAll() {\n  const elements = Array.from(document.querySelectorAll(`[${Settings.Attribute.TRIGGER}]`));\n\n  const singleInstances = [];\n  const groupInstances = [];\n  const groupIds = [];\n\n  elements.forEach((item) => {\n    const groupId = item.getAttribute(Settings.Attribute.GROUP);\n    if (groupId) {\n      if (!groupIds.includes(groupId)) {\n        const group = elements.filter(el => el.getAttribute(Settings.Attribute.GROUP) === groupId);\n        const isAnimated = group.some(el => el.hasAttribute(Settings.Attribute.ANIMATED));\n        groupInstances.push(isAnimated ?\n          new ExpandableAccordion(group) :\n          new ExpandableGroup(group));\n        groupIds.push(groupId);\n      }\n    } else {\n      singleInstances.push(new ExpandableItem(item.getAttribute(Settings.Attribute.TRIGGER)));\n    }\n  });\n\n  return singleInstances.concat(groupInstances);\n}\n\nexport { default as Settings } from './settings';\nexport { default as ExpandableItem } from './expandable-item';\nexport { default as ExpandableGroup } from './expandable-group';\nexport { default as ExpandableAccordion } from './expandable-accordion';\n"],"names":["ExpandableItem","id","options","Object","assign","Settings","Defaults","trigger","document","body","querySelector","Attribute","TRIGGER","target","getElementById","isOpen","classList","contains","ClassName","TARGET_OPEN","_setA11yAttributes","open","groupedItem","_onTriggerClick","_triggerClickHandler","bind","addEventListener","evt","preventDefault","closest","toggle","setAttribute","toString","_removeA11yAttributes","removeAttribute","close","add","TRIGGER_OPEN","remove","dispose","removeEventListener","ExpandableGroup","elements","_elements","expandables","map","getAttribute","_onClick","_onClickHandler","includes","toggleVisibility","forEach","expandable","item","ExpandableAccordion","_expandableOffsets","update","_resizeId","OdoWindowEvents","onResize","openExpandables","style","transitionDuration","_setHeight","_getOffsets","i","offsetWidth","_animateHeight","_scrollToSelected","scrollY","window","pageYOffset","getBoundingClientRect","top","find","offset","setToOpen","contentHeight","firstElementChild","offsetHeight","height","isTarget","initializeAll","Array","from","querySelectorAll","singleInstances","groupInstances","groupIds","groupId","GROUP","group","filter","el","isAnimated","some","hasAttribute","ANIMATED","push","concat"],"mappings":"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"}