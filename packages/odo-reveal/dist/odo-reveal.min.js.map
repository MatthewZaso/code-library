{"version":3,"file":"odo-reveal.min.js","sources":["../src/reveal.js"],"sourcesContent":["/**\n * @fileoverview Fade elements in and up when they come into view. Waits for\n * images inside the main element to load before triggering the fade.\n *\n * @author Glen Cheney <glen@odopod.com>\n *\n * TODO: Add a (better) way to ignore/add/remove images or videos.\n */\n\nimport OdoDevice from '@odopod/odo-device';\nimport OdoViewport from '@odopod/odo-viewport';\nimport { animation, browser, utilities } from '@odopod/odo-helpers';\n\n/**\n * @param {Element} element Main element for the module.\n * @constructor\n */\nclass Reveal {\n  constructor(element) {\n    this.element = element;\n    this.images = this._getDependentImages();\n    this._numImages = this.images.length;\n    this._loadedImages = 0;\n    this._imageCompleteHandler = this._imageComplete.bind(this);\n    this._ready = new Promise((resolve) => {\n      this._resolve = resolve;\n    });\n\n    if (this._numImages > 0) {\n      this.images.forEach((image) => {\n        image.addEventListener('load', this._imageCompleteHandler);\n        image.addEventListener('error', this._imageCompleteHandler);\n      });\n    } else {\n      this._resolve();\n    }\n\n    // To avoid blank text while scrolling on native Android,\n    // the type is faded in immediately and not given to the viewport\n    // to track.\n    if (Reveal.HAS_SCROLL_ANIMATION) {\n      this.id = OdoViewport.add({\n        element,\n        threshold: utilities.getPercentageOption(element.getAttribute('data-threshold'), '25%'),\n        enter: this._enteredView.bind(this),\n      });\n    } else {\n      this._show();\n    }\n  }\n\n  /**\n   * Get all images within the main element which do not have the \"ignore\" class\n   * on a parent element.\n   * @return {Array.<HTMLImageElement>}\n   * @private\n   */\n  _getDependentImages() {\n    const images = Array.from(this.element.querySelectorAll('img'));\n    return images.filter(img => img.closest('.' + Reveal.ClassName.IGNORE) === null);\n  }\n\n  /**\n   * Element is in view. Wait until all images have finished loading then animate\n   * the targets in.\n   */\n  _enteredView() {\n    this._ready.then(this._show.bind(this));\n  }\n\n  /**\n   * Main element came into view. Add the fade in class to the main element which\n   * triggers all type to start transitioning.\n   * @private\n   */\n  _show() {\n    this.element.classList.add(Reveal.ClassName.IN);\n\n    const targetSelector = '.' + Reveal.ClassName.TARGET;\n    const targets = Array.from(this.element.querySelectorAll(targetSelector));\n\n    // Listen transition end on each target and add a class which removes\n    // the transform and layer promotion from it.\n    targets.forEach((el) => {\n      animation.onTransitionEnd(el, this._handleShown, null, OdoDevice.Dom.TRANSFORM);\n    });\n\n    this.dispose();\n  }\n\n  /**\n   * Add the done class which removes the transforms and layer promotion.\n   * @private\n   */\n  _handleShown(evt) {\n    evt.target.classList.add(Reveal.ClassName.DONE);\n  }\n\n  /**\n   * An image loaded or failed to load. If it was the last image, resolve the\n   * promise waiting for all images to finish.\n   * @private\n   */\n  _imageComplete() {\n    this._loadedImages += 1;\n\n    if (this._loadedImages === this._numImages) {\n      this._resolve();\n    }\n  }\n\n  /**\n   * Remove the type animations from the viewport watcher. Has no effect if the\n   * element has already come into view.\n   */\n  dispose() {\n    OdoViewport.remove(this.id);\n\n    this.images.forEach((image) => {\n      image.removeEventListener('load', this._imageCompleteHandler);\n      image.removeEventListener('error', this._imageCompleteHandler);\n    });\n\n    this.images = null;\n    this.element = null;\n  }\n\n  /**\n   * Auto-initialize all odo reveal elements currently on the page.\n   * @param {Element} [context] Optional context to initialize elements within.\n   * @return {Array.<Reveal>}\n   */\n  static initializeAll(context = document) {\n    return Array.from(context.querySelectorAll('.odo-reveal'))\n      .map(element => new Reveal(element));\n  }\n}\n\n/**\n * Whether or not to add the main element to the Viewport watcher. By default,\n * no native Android browsers are registered. The type will fade in immediately.\n * @type {boolean}\n */\nReveal.HAS_SCROLL_ANIMATION = !browser.isNativeAndroid(navigator.userAgent);\n\n/** @enum {string} */\nReveal.ClassName = {\n  TARGET: 'odo-reveal__target',\n  IN: 'odo-reveal--shown',\n  DONE: 'odo-reveal--done',\n  IGNORE: 'odo-reveal__ignore',\n};\n\nexport default Reveal;\n"],"names":["Reveal","element","images","this","_getDependentImages","_numImages","length","_loadedImages","_imageCompleteHandler","_imageComplete","bind","_ready","Promise","resolve","_resolve","forEach","image","addEventListener","_this","HAS_SCROLL_ANIMATION","id","OdoViewport","add","utilities","getPercentageOption","getAttribute","_enteredView","_show","Array","from","querySelectorAll","filter","img","closest","ClassName","IGNORE","then","classList","IN","targetSelector","TARGET","el","onTransitionEnd","_this2","_handleShown","OdoDevice","Dom","TRANSFORM","dispose","evt","target","DONE","remove","removeEventListener","_this3","initializeAll","context","document","map","browser","isNativeAndroid","navigator","userAgent"],"mappings":"6jBAiBMA,wBACQC,6BACLA,QAAUA,OACVC,OAASC,KAAKC,2BACdC,WAAaF,KAAKD,OAAOI,YACzBC,cAAgB,OAChBC,sBAAwBL,KAAKM,eAAeC,KAAKP,WACjDQ,OAAS,IAAIC,QAAQ,SAACC,KACpBC,SAAWD,IAGdV,KAAKE,WAAa,OACfH,OAAOa,QAAQ,SAACC,KACbC,iBAAiB,OAAQC,EAAKV,yBAC9BS,iBAAiB,QAASC,EAAKV,8BAGlCM,WAMHd,EAAOmB,0BACJC,GAAKC,EAAYC,yBAETC,YAAUC,oBAAoBvB,EAAQwB,aAAa,kBAAmB,aAC1EtB,KAAKuB,aAAahB,KAAKP,aAG3BwB,2BAUTvB,sCACiBwB,MAAMC,KAAK1B,KAAKF,QAAQ6B,iBAAiB,QAC1CC,OAAO,mBAAsD,OAA/CC,EAAIC,QAAQ,IAAMjC,EAAOkC,UAAUC,uBAOjET,6BACOf,OAAOyB,KAAKjC,KAAKwB,MAAMjB,KAAKP,oBAQnCwB,iCACO1B,QAAQoC,UAAUf,IAAItB,EAAOkC,UAAUI,QAEtCC,EAAiB,IAAMvC,EAAOkC,UAAUM,OAC9BZ,MAAMC,KAAK1B,KAAKF,QAAQ6B,iBAAiBS,IAIjDxB,QAAQ,SAAC0B,eACLC,gBAAgBD,EAAIE,EAAKC,aAAc,KAAMC,EAAUC,IAAIC,kBAGlEC,uBAOPJ,sBAAaK,KACPC,OAAOb,UAAUf,IAAItB,EAAOkC,UAAUiB,mBAQ5C1C,+BACOF,eAAiB,EAElBJ,KAAKI,gBAAkBJ,KAAKE,iBACzBS,wBAQTkC,gCACcI,OAAOjD,KAAKiB,SAEnBlB,OAAOa,QAAQ,SAACC,KACbqC,oBAAoB,OAAQC,EAAK9C,yBACjC6C,oBAAoB,QAASC,EAAK9C,8BAGrCN,OAAS,UACTD,QAAU,QAQVsD,6BAAcC,yDAAUC,gBACtB7B,MAAMC,KAAK2B,EAAQ1B,iBAAiB,gBACxC4B,IAAI,mBAAW,IAAI1D,EAAOC,kBASjCD,EAAOmB,sBAAwBwC,UAAQC,gBAAgBC,UAAUC,WAGjE9D,EAAOkC,kBACG,wBACJ,yBACE,0BACE"}