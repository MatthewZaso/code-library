@function sassplate-get-column-selector($number, $breakpoint) {
  @return ".#{$grid-prefix}-#{$number}#{sassplate-get-breakpoint-suffix($breakpoint)}";
}

@function sassplate-get-breakpoint-suffix($breakpoint-name: "") {
  @if $breakpoint-name == "" {
    @return $breakpoint-name;
  }

  @return "\\@" + $breakpoint-name;
}

@function sassplate-get-grid-breakpoint-selectors($breakpoint) {
  $selectors: ();
  @for $i from 1 through $grid-columns {
    $selectors: append($selectors, sassplate-get-column-selector($i, $breakpoint), comma);
  }

  @return $selectors;
}

@function sassplate-get-all-grid-breakpoint-selectors() {
  $selectors: ();
  @each $breakpoint in $grid-sizes {
   $selectors: append($selectors, sassplate-get-grid-breakpoint-selectors($breakpoint), comma);
  }

  @return $selectors;
}

@mixin sassplate-grid-item-styles() {
  // `display: subgrid` should be used here in the future when it's supported.
  #{sassplate-get-all-grid-breakpoint-selectors()} {
    display: grid;
    grid-column: 1 / -1;
  }
}

@mixin sassplate-grid-ratios($breakpoint-name: "") {
  $modifier: sassplate-get-breakpoint-suffix($breakpoint-name);

  // Note @extend isn't used because it cannot be used within @media directives.
  @each $list in $aspect-boxes {
    $top: nth($list, 1);
    $bottom: nth($list, 2);
    $name: "#{$top}x#{$bottom}";
    .#{$grid-ratio-name}--#{$name}#{$modifier} {
      padding-bottom: percentage($bottom / $top);
    }
  }

  // A `none` class (eg `aspect--none@xs`) which removes the aspect ratio
  .#{$grid-ratio-name}--none#{$modifier} {
    @include no-aspect();

    > .#{$grid-ratio-inner-name} {
      @include reset-fill-parent();
    }
  }
}

// .gutterless@md
@mixin sassplate-gutterless-class($breakpoint-name: "") {
  .gutterless#{sassplate-get-breakpoint-suffix($breakpoint-name)} {
    grid-gap: 0;
  }
}

// Create grid for specific class
@mixin sassplate-grid-spans-offsets($breakpoint, $columns) {
  // Spans
  @for $index from 1 through $columns {
    .#{$grid-prefix}-#{$index}\@#{$breakpoint} {
      grid-column: auto / span $index;
    }
  }

  // Offsets
  @for $index from 1 through $columns {
    .#{$grid-prefix}-start-#{$index}\@#{$breakpoint} {
      grid-column-start: $index;
    }
  }
}
