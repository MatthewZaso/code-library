@function sassplate-get-column-selector($number, $breakpoint) {
  @return ".#{$grid-prefix}-#{$number}\\@#{$breakpoint}";
}

@function sassplate-get-breakpoint-suffix($breakpoint-name: "") {
  @if $breakpoint-name == "" {
    @return $breakpoint-name;
  }

  @return "\\@" + $breakpoint-name;
}

@function sassplate-get-grid-breakpoint-selectors($breakpoint) {
  $selectors: ();
  @for $i from 1 through $grid-columns {
    $selectors: append($selectors, sassplate-get-column-selector($i, $breakpoint), comma);
  }

  @return $selectors;
}

@function sassplate-get-all-grid-breakpoint-selectors() {
  $selectors: ();
  @each $breakpoint in $grid-sizes {
   $selectors: append($selectors, sassplate-get-grid-breakpoint-selectors($breakpoint), comma);
  }

  @return $selectors;
}

@mixin sassplate-grid-columns() {
  $selectors: sassplate-get-all-grid-breakpoint-selectors();

  #{$selectors} {
    position: relative;
    box-sizing: border-box;
    // Prevent columns from collapsing when empty
    min-height: 1px;
    // Inner gutter via padding
    padding-left: map-get($grid-gutter-width, xs) / 2;
    padding-right: map-get($grid-gutter-width, xs) / 2;
  }
}

@mixin sassplate-breakpoint-grid-gutters($breakpoint-name) {
  .#{$grid-row} {
    margin-left: map-get($grid-gutter-width, $breakpoint-name) / -2;
    margin-right: map-get($grid-gutter-width, $breakpoint-name) / -2;
  }

  $selectors: sassplate-get-all-grid-breakpoint-selectors();

  #{$selectors} {
    padding-left: map-get($grid-gutter-width, $breakpoint-name) / 2;
    padding-right: map-get($grid-gutter-width, $breakpoint-name) / 2;
  }
}

@mixin sassplate-float-grid-columns($breakpoint) {
  $selectors: sassplate-get-grid-breakpoint-selectors($breakpoint);

  #{$selectors} {
    float: left;
  }
}

@mixin sassplate-grid-ratios($breakpoint-name: "") {
  $modifier: sassplate-get-breakpoint-suffix($breakpoint-name);

  // Note @extend isn't used because it cannot be used within @media directives.
  @each $list in $aspect-boxes {
    $top: nth($list, 1);
    $bottom: nth($list, 2);
    $name: "#{$top}x#{$bottom}";
    .#{$grid-ratio-name}--#{$name}#{$modifier} {
      padding-bottom: percentage($bottom / $top);
    }
  }

  // A `none` class (eg `aspect--none@xs`) which removes the aspect ratio
  .#{$grid-ratio-name}--none#{$modifier} {
    @include no-aspect();

    > .#{$grid-ratio-inner-name} {
      @include reset-fill-parent();
    }
  }
}

@mixin sassplate-grid-column($index, $columns, $breakpoint, $type) {
  @if ($type == "width") and ($index > 0) {
    .#{$grid-prefix}-#{$index}\@#{$breakpoint} {
      width: percentage($index / $columns);
    }
  }
  @if $type == "push" {
    .#{$grid-prefix}-push-#{$index}\@#{$breakpoint} {
      left: if($index > 0, percentage($index / $columns), auto);
    }
  }
  @if $type == "pull" {
    .#{$grid-prefix}-pull-#{$index}\@#{$breakpoint} {
      right: if($index > 0, percentage($index / $columns), auto);
    }
  }
  @if ($type == "offset") {
    .#{$grid-prefix}-offset-#{$index}\@#{$breakpoint} {
      margin-left: percentage($index / $columns);
    }
  }
}

@mixin sassplate-gutterless-row($breakpoint-name: "") {
  $modifier: sassplate-get-breakpoint-suffix($breakpoint-name);

  // .row@md
  .#{$grid-row}--gutterless#{$modifier} {
    margin-left: 0;
    margin-right: 0;

    // *[class*="col-"]
    > *[class*="#{$grid-prefix}-"] {
      padding-left: 0;
      padding-right: 0;
    }
  }
}

@mixin sassplate-loop-grid-columns($columns, $breakpoint, $type) {
  @for $i from 0 through $columns {
    @include sassplate-grid-column($i, $columns, $breakpoint, $type);
  }
}

// Create grid for specific class
@mixin sassplate-grid($breakpoint, $columns: $grid-columns) {
  // Add float:left to all grid selectors for this breakpoint.
  @include sassplate-float-grid-columns($breakpoint);
  @include sassplate-grid-ratios($breakpoint);

  @include sassplate-loop-grid-columns($columns, $breakpoint, "width");
  @include sassplate-loop-grid-columns($columns, $breakpoint, "pull");
  @include sassplate-loop-grid-columns($columns, $breakpoint, "push");
  @include sassplate-loop-grid-columns($columns, $breakpoint, "offset");
}
